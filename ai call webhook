{
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "8b6104d6-7b4a-470b-a045-a7bb82b3835b",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2320,
        -16
      ],
      "id": "6002909f-da16-4e5b-948e-08c14a78d910",
      "name": "Webhook",
      "webhookId": "8b6104d6-7b4a-470b-a045-a7bb82b3835b"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10ff319f-7b29-46f9-a1cb-d21b768a19c3",
              "name": "Authorization",
              "value": "pit-c7a42ee5-429a-4e18-bb42-93a7844bfdda",
              "type": "string"
            },
            {
              "id": "ce3377ae-e394-4739-a8dd-d099b02ee1d2",
              "name": "locationId",
              "value": "86RdyK8qJfvwH7xvXASR",
              "type": "string"
            },
            {
              "id": "65dd36bb-645c-4aac-8135-952b822b77cd",
              "name": "Account Timezone",
              "value": "={{ THIS NEEDS TO BE CONTINENT CITY TIMEZONE }}",
              "type": "string"
            },
            {
              "id": "96b9ae16-deb6-4029-88e4-22f8c4e2661c",
              "name": "to_number",
              "value": "={{ $('Webhook').item.json.body.call_inbound.to_number }}",
              "type": "string"
            },
            {
              "id": "1c8611cd-5f66-4f6e-b208-bfa2c1845280",
              "name": "from_number",
              "value": "={{ $('Webhook').item.json.body.call_inbound.from_number }}",
              "type": "string"
            },
            {
              "id": "6b778d42-cc76-41e5-bbce-2ff9a2f75579",
              "name": "sales_pipeline_id",
              "value": "={{ THIS NEEDS TO BE SALES PIPELINE ID }}",
              "type": "string"
            },
            {
              "id": "fba82037-940c-451a-a6e4-5cd796e540c4",
              "name": "sales_pipeline_stage_id",
              "value": "={{ THIS NEEDS TO BE SALES PIPELINE STAGE ID }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1872,
        -496
      ],
      "id": "751ea0f7-282c-44ba-a9de-968d7e00861e",
      "name": "Set Account Fields"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json.body.event }}",
                    "rightValue": "call_inbound",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "eefaf992-02e6-4518-a64b-a87ab6b9c0a0"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "call_inbound"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "03f3b1ff-57bf-4d81-bed4-f18e4d39d520",
                    "leftValue": "={{ $json.body.customData['Call Type'] }}",
                    "rightValue": "outboundPhoneCall",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "outboundPhoneCall"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "843471d3-2025-441b-a977-9dfb94594ec1",
                    "leftValue": "={{ $('Webhook').item.json.body.event }}",
                    "rightValue": "=call_analyzed",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "call_analyzed"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c531f1dc-395d-4df0-bba3-ad84fe86b5d3",
                    "leftValue": "={{ $json.body.name }}",
                    "rightValue": "=check_availability",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "check_availability "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2c1c688c-ca88-4b8f-9369-71d9c32be3fa",
                    "leftValue": "={{ $json.body.name }}",
                    "rightValue": "schedule_appointment",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cb39b12c-1c55-4829-85ff-0b87caa6eb4e",
                    "leftValue": "={{ $('Webhook').item.json.body.event }}",
                    "rightValue": "send_message",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "send_message"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2096,
        -80
      ],
      "id": "321332c9-0c01-4951-a662-6a745dc106c5",
      "name": "Switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b87cea0e-9df8-409b-9de8-acc134173dba",
              "name": "Authorization",
              "value": "=pit-c7a42ee5-429a-4e18-bb42-93a7844bfdda",
              "type": "string"
            },
            {
              "id": "f7217fd2-d8f5-4686-a52a-337fcef8570f",
              "name": "Location ID",
              "value": "86RdyK8qJfvwH7xvXASR",
              "type": "string"
            },
            {
              "id": "82f1c1f1-7eca-4ff4-b46a-fb3c362df2e0",
              "name": "calendar_id",
              "value": "={{ $('Webhook').item.json.body.args.calendar_id }}",
              "type": "string"
            },
            {
              "id": "18108645-b3e4-40c3-bfd0-355a961ad7ff",
              "name": "start_date",
              "value": "={{ $json.body.args.start_date || $json.body.args.appointment_start_time || $json.body.args.appointment_start_date }}",
              "type": "string"
            },
            {
              "id": "df0a7938-e765-4336-a519-297e091023ca",
              "name": "end_date",
              "value": "={{ $json.body.args.end_date || $json.body.args.appointment_end_time || $json.body.args.appointment_end_date }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1872,
        80
      ],
      "id": "c4c0b780-6922-441d-bc5f-316080d6401b",
      "name": "Set get_free_slots Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b87cea0e-9df8-409b-9de8-acc134173dba",
              "name": "Authorization",
              "value": "pit-c7a42ee5-429a-4e18-bb42-93a7844bfdda",
              "type": "string"
            },
            {
              "id": "f7217fd2-d8f5-4686-a52a-337fcef8570f",
              "name": "Location ID",
              "value": "86RdyK8qJfvwH7xvXASR",
              "type": "string"
            },
            {
              "id": "82f1c1f1-7eca-4ff4-b46a-fb3c362df2e0",
              "name": "calendar_id",
              "value": "={{ $('Webhook').item.json.body.args.calendar_id }}",
              "type": "string"
            },
            {
              "id": "18108645-b3e4-40c3-bfd0-355a961ad7ff",
              "name": "start_time",
              "value": "={{ $json.body.args.appointment_start_time }}",
              "type": "string"
            },
            {
              "id": "70954c3a-d4a4-42db-b26a-709a1a41e69e",
              "name": "phone",
              "value": "={{ $json.body.args.contact_number }}",
              "type": "string"
            },
            {
              "id": "2c92798c-eff1-4ed4-946e-705aafe01433",
              "name": "contact_name",
              "value": "={{ $json.body.args.first_name }} {{ $json.body.args.last_name }}",
              "type": "string"
            },
            {
              "id": "1b874344-a809-499c-a185-9c3aa04966df",
              "name": "contact_email",
              "value": "={{ $json.body.args.email }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1872,
        464
      ],
      "id": "870349e8-e949-4707-be61-a2736b74d545",
      "name": "Set create_appointment Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b87cea0e-9df8-409b-9de8-acc134173dba",
              "name": "Authorization",
              "value": "pit-c7a42ee5-429a-4e18-bb42-93a7844bfdda",
              "type": "string"
            },
            {
              "id": "f7217fd2-d8f5-4686-a52a-337fcef8570f",
              "name": "Location ID",
              "value": "86RdyK8qJfvwH7xvXASR",
              "type": "string"
            },
            {
              "id": "70954c3a-d4a4-42db-b26a-709a1a41e69e",
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.call.retell_llm_dynamic_variables.phone }}",
              "type": "string"
            },
            {
              "id": "2c92798c-eff1-4ed4-946e-705aafe01433",
              "name": "contact_name",
              "value": "={{ $('Webhook').item.json.body.args.contact_name }}",
              "type": "string"
            },
            {
              "id": "1b874344-a809-499c-a185-9c3aa04966df",
              "name": "contact_email",
              "value": "={{ $('Webhook').item.json.body.args.contact_email }}",
              "type": "string"
            },
            {
              "id": "93fcfdd2-453c-4e0e-a214-fbdffae0472a",
              "name": "sms_message",
              "value": "={{ THIS NEEDS TO BE WAHTEVER MESSAGE YOU WANT TO SEND FROM THE AI ON THE PHONE LIKE THE LINK TO YOUR LEAD MAGENT FOR EXAMPLE }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1872,
        848
      ],
      "id": "7cb91fb1-89cc-42ea-8f73-390c65f3187b",
      "name": "Set send_message Fields"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/contacts/search",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set Account Fields').first().json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"locationId\": \"{{ $('Set Account Fields').first().json.locationId }}\",\n  \"page\": 1,\n  \"pageLimit\": 20,\n  \"filters\": [\n    {\n      \"field\": \"phone\",\n      \"operator\": \"eq\",\n      \"value\": \"{{ $('Set Account Fields').first().json.from_number }}\"\n    }\n  ]\n}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "text",
              "outputPropertyName": "contact_details"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1648,
        -496
      ],
      "id": "8d67ac41-e744-4ed9-ae9b-fc37285954b5",
      "name": "Search Contacts GHL",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Get input data from nodes (all pre-formatted as strings)\nconst customValuesData = $('Get Custom Values GHL').item.json.custom_values || \"{}\";\nconst customFieldsData = $('Get Custom Fields GHL').item.json.custom_fields || \"{}\";\nconst contactData = $('Search Contacts GHL').item.json.contact_details || \"{}\";\nconst conversationsData = $('Search Conversations GHL').item.json || \"{}\";\nconst messagesOutput = $('Get Messages By Conversation ID GHL').item.json || \"{}\";\nconst notesOutput = $('Get Notes GHL').item.json || \"{}\";\nconst formattedNotes = $('Code Parse Notes').item.json?.readableNotes || \"\";\nconst formattedConversations = $('Code Parse Notes').item.json?.readableConversations || \"\";\nconst calendarData = $('Get Calendars GHL').item.json.calendars || \"{}\";\nconst accountFields = $('Set Account Fields').item.json;\n\n// Parse the JSON strings to objects\nconst customValuesObj = JSON.parse(customValuesData);\nconst customFieldsObj = JSON.parse(customFieldsData);\nconst contactObj = JSON.parse(contactData);\nconst calendarObj = JSON.parse(calendarData);\n\n// Extract the contact data from the first contact in the array\nconst contact = contactObj.contacts ? contactObj.contacts[0] : {};\n\n// Extract custom fields array from both sources\nconst accountCustomFields = customFieldsObj.customFields || [];\nconst contactCustomFields = contact.customFields || [];\nconst accountCustomValues = customValuesObj.customValues || [];\nconst calendars = calendarObj.calendars || [];\n\n// Create a mapping of field IDs to field names and keys\nconst fieldMap = {};\naccountCustomFields.forEach(field => {\n  // Convert field name to snake_case for variable names\n  const snakeCaseName = field.name\n    .toLowerCase()\n    .replace(/[^\\w\\s]/g, '')\n    .replace(/\\s+/g, '_');\n  \n  // If field.fieldKey starts with \"contact.\" remove that prefix\n  let fieldKey = field.fieldKey || \"\";\n  if (fieldKey.startsWith(\"contact.\")) {\n    fieldKey = fieldKey.substring(\"contact.\".length);\n  }\n  \n  fieldMap[field.id] = {\n    name: field.name,\n    fieldKey: fieldKey,\n    snakeCaseName: snakeCaseName\n  };\n  \n  // Also index by fieldKey for easy lookup if it exists\n  if (fieldKey) {\n    fieldMap[fieldKey] = {\n      name: field.name,\n      id: field.id,\n      snakeCaseName: snakeCaseName\n    };\n  }\n});\n\n// Create an object to store contact field values\nconst contactFieldValues = {};\n\n// Populate values from contact custom fields\ncontactCustomFields.forEach(field => {\n  if (fieldMap[field.id]) {\n    // Convert values to strings\n    contactFieldValues[fieldMap[field.id].snakeCaseName] = String(field.value || \"\");\n  }\n});\n\n// Safely get custom values with fallbacks for resilience\nconst getCustomValue = (name) => {\n  const value = accountCustomValues.find(cv => cv.name === name)?.value;\n  // Convert to string if it exists\n  return value !== undefined ? String(value) : '';\n};\n\n// Get essential values (using safe accessor functions)\nconst voiceAgentId = getCustomValue('Voice AI Agent ID Inbound');\nconst voiceAgentName = getCustomValue('Voice AI Agent Name Inbound');\nconst voiceAgentApiKey = getCustomValue('AI Call API Key'); // ADD THIS LINE\n\n// Get optional values (won't break if they don't exist)\nconst salesCalendar1 = getCustomValue('Sales Calendar 1');\nconst salesCalendar2 = getCustomValue('Sales Calendar 2');\nconst onboardingCalendar = getCustomValue('Onboarding Calendar');\nconst customerSuccessCalendar = getCustomValue('Customer Success Calendar');\nconst businessName = getCustomValue('Business Name');\n\n// Format contact name with proper capitalization\nconst firstName = contact.firstNameLowerCase ? \n  contact.firstNameLowerCase.charAt(0).toUpperCase() + contact.firstNameLowerCase.slice(1) : \n  '';\nconst lastName = contact.lastNameLowerCase ? \n  contact.lastNameLowerCase.charAt(0).toUpperCase() + contact.lastNameLowerCase.slice(1) : \n  '';\nconst fullName = `${firstName} ${lastName}`.trim() || 'none';\n\n// Create a complete mapping of all calendars (no hardcoded names)\nconst calendarMap = {};\ncalendars.forEach(calendar => {\n  // Store by both original name and snake_case name for flexibility\n  const calendarName = calendar.name || \"\";\n  const snakeCaseName = calendarName\n    .toLowerCase()\n    .replace(/[^\\w\\s]/g, '')\n    .replace(/\\s+/g, '_');\n  \n  calendarMap[calendarName] = calendar.id;\n  calendarMap[snakeCaseName] = calendar.id;\n});\n\n// Dynamically detect and categorize calendars based on naming patterns\nconst calendarTypes = {\n  sales: ['sales', 'discovery', 'consultation'],\n  onboarding: ['onboarding', 'welcome', 'orientation'],\n  customer_success: ['success', 'support', 'check-in', 'checkin', 'follow-up', 'followup'],\n  referral: ['referral', 'partner']\n};\n\n// Initialize the calendar types object\nconst detectedCalendarTypes = {};\n\n// Map each calendar to a type based on name patterns\nObject.entries(calendarMap).forEach(([calendarName, calendarId]) => {\n  // Skip snake_case duplicates\n  if (calendarName.includes('_')) return;\n  \n  const lowerName = calendarName.toLowerCase();\n  \n  // Try to categorize this calendar\n  for (const [type, keywords] of Object.entries(calendarTypes)) {\n    if (keywords.some(keyword => lowerName.includes(keyword))) {\n      // First match for this type becomes the primary calendar for that type\n      if (!detectedCalendarTypes[type]) {\n        detectedCalendarTypes[type] = String(calendarId);\n      }\n    }\n  }\n});\n\n// Get connection details from Set Account Fields\nconst toNumber = String(accountFields.to_number || '');\nconst fromNumber = String(accountFields.from_number || '');\nconst privateIntegrationToken = String(accountFields.Authorization || '');\nconst locationId = String(accountFields.locationId || '');\nconst accountTimezone = String(accountFields['Account Timezone'] || 'America/New_York');\n\n// Create the dynamic variables object with all the enhanced context\nconst dynamicVariables = {\n  // Basic contact info\n  name: String(firstName || 'none'),\n  phone: String(contact.phone || 'none'),\n  email: String(contact.email || 'none'),\n  address: String(contact.address || 'none'),\n  full_name: String(fullName),\n  business_name: String(contact.businessName || contact.companyName || 'none'),\n  contact_id: String(contact.id || ''),\n  location_id: locationId,\n  private_integration_token: privateIntegrationToken,\n  account_company_name: businessName,\n  from_number: fromNumber,\n  to_number: toNumber,\n  account_timezone: accountTimezone,\n  voice_ai_agent_name: voiceAgentName,\n  voice_ai_agent_id: voiceAgentId,\n  voice_ai_agent_api_key: voiceAgentApiKey, // CHANGE THIS FROM voiceAgentApi to voiceAgentApiKey\n  \n  // Calendar IDs (conditionally added)\n  sales_calendar_id: detectedCalendarTypes.sales || salesCalendar1 || '',\n  sales2_calendar_id: detectedCalendarTypes.referral || salesCalendar2 || '',\n  onboarding_calendar_id: detectedCalendarTypes.onboarding || onboardingCalendar || '',\n  customer_success_calendar_id: detectedCalendarTypes.customer_success || customerSuccessCalendar || '',\n  \n  // Add conversation and notes history\n  conversation_history: formattedConversations,\n  notes_history: formattedNotes,\n  \n  // Tags (if available)\n  tags: Array.isArray(contact.tags) ? contact.tags.map(tag => String(tag)).join(', ') : ''\n};\n\n// Add all custom field IDs and values to the dynamicVariables\naccountCustomFields.forEach(field => {\n  const snakeCaseName = fieldMap[field.id]?.snakeCaseName;\n  if (snakeCaseName) {\n    // Add field ID with snake_case format (with _id suffix)\n    dynamicVariables[`${snakeCaseName}_id`] = String(field.id);\n    \n    // Only add field values that actually exist for this contact\n    if (contactFieldValues[snakeCaseName] !== undefined) {\n      dynamicVariables[snakeCaseName] = contactFieldValues[snakeCaseName];\n    }\n  }\n});\n\n// Calendar map for easy access to all calendars\ndynamicVariables.calendar_map = JSON.stringify(calendarMap);\n\n// Create the call_inbound format structure (maintaining original format)\nconst callInbound = {\n  call_inbound: {\n    dynamic_variables: dynamicVariables\n  }\n};\n\n// Convert the object to a properly formatted JSON string\nconst jsonString = JSON.stringify(callInbound, null, 2);\n\n// Return an object with the jsonString as an easily mappable property\nreturn { jsonBody: jsonString };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        592,
        -304
      ],
      "id": "15ae43af-fea0-4c40-8e2d-fcd7ab6529dc",
      "name": "Match Final Values",
      "executeOnce": false,
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $('Match Final Values').first().json.jsonBody }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        816,
        -304
      ],
      "id": "3167eaba-e927-4bf0-bd22-aa41fe13d2ed",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "jsCode": "// Improved notes parser that's more dynamic and robust\nfunction processData() {\n  try {\n    // Get the raw outputs from the nodes\n    const conversationsRaw = $('Get Messages By Conversation ID GHL').item.json.conversations_output;\n    const notesRaw = $('Get Notes GHL').item.json.notes_output;\n    \n    // Parse the JSON strings\n    const conversationsData = JSON.parse(conversationsRaw);\n    const notesData = JSON.parse(notesRaw);\n    \n    // Format the data for humans and AI consumption\n    const readableConversations = formatConversations(conversationsData);\n    const readableNotes = formatNotesImproved(notesData);\n    \n    // Return the result\n    return [{ \n      json: {\n        readableConversations: readableConversations,\n        readableNotes: readableNotes\n      } \n    }];\n  } catch (error) {\n    return [{ json: { error: error.message } }];\n  }\n}\n\n// Format conversations (keeping existing implementation)\nfunction formatConversations(data) {\n  let result = \"== CONVERSATION HISTORY ==\\n\\n\";\n  \n  if (!data.messages || !data.messages.messages || data.messages.messages.length === 0) {\n    return result + \"No conversations found.\";\n  }\n  \n  const messages = data.messages.messages;\n  \n  for (let i = 0; i < messages.length; i++) {\n    const msg = messages[i];\n    \n    // Add date\n    result += \"[\" + new Date(msg.dateAdded).toLocaleString() + \"] \";\n    \n    // Add direction\n    if (msg.direction === \"inbound\") {\n      result += \"INCOMING \";\n    } else {\n      result += \"OUTGOING \";\n    }\n    \n    // Add type\n    if (msg.messageType === \"TYPE_ACTIVITY_OPPORTUNITY\") {\n      result += \"Opportunity Activity\";\n    } else if (msg.messageType === \"TYPE_SMS\") {\n      result += \"SMS\";\n    } else if (msg.messageType === \"TYPE_CALL\") {\n      result += \"Call\";\n    } else {\n      result += msg.messageType;\n    }\n    \n    // Add status if available\n    if (msg.status) {\n      result += \" (\" + msg.status + \")\";\n    }\n    \n    result += \":\\n\";\n    \n    // Add body if available\n    if (msg.body) {\n      result += msg.body + \"\\n\";\n    }\n    \n    // Add separator\n    if (i < messages.length - 1) {\n      result += \"\\n--------------------------------------------------\\n\\n\";\n    }\n  }\n  \n  return result;\n}\n\n// Improved notes formatter that's more flexible\nfunction formatNotesImproved(data) {\n  let result = \"== CONTACT NOTES ==\\n\\n\";\n  \n  if (!data.notes || data.notes.length === 0) {\n    return result + \"No notes found.\";\n  }\n  \n  const notes = data.notes;\n  \n  for (let i = 0; i < notes.length; i++) {\n    const note = notes[i];\n    \n    result += \"NOTE CREATED: \" + new Date(note.dateAdded).toLocaleString() + \"\\n\\n\";\n    \n    // Extract data dynamically from the note body\n    try {\n      // Get the note body and try to parse key-value pairs\n      const noteBody = note.body;\n      \n      // Check if the note body looks like it contains JSON-like key-value pairs\n      if (noteBody.includes(\"\\\"key\\\"\") && noteBody.includes(\"\\\"field_value\\\"\")) {\n        // Parse the pseudo-JSON structure\n        const entries = extractKeyValuePairs(noteBody);\n        \n        // Group entries by category\n        const callDetails = {};\n        let transcript = \"\";\n        let summary = \"\";\n        \n        // Process each entry\n        entries.forEach(entry => {\n          const key = entry.key;\n          const value = entry.value;\n          \n          // Handle special cases\n          if (key === \"AI Call Transcript\") {\n            transcript = value;\n          } else if (key === \"AI Call Summary\") {\n            summary = value;\n          } else {\n            // Store other fields in the details object\n            callDetails[key] = value;\n          }\n        });\n        \n        // Output formatted data (Details first)\n        result += \"=== CALL DETAILS ===\\n\";\n        \n        // Organize details into categories for better readability\n        const categories = {\n          \"Basic Info\": [\"AI Call Type\", \"AI Call Contact Name\", \"AI Call Duration\"],\n          \"Outcome\": [\"AI Call Outcome\", \"AI Call Outcome Reason\"],\n          \"Appointment\": [\"AI Call Appointment DateTime\"],\n          \"Contact Info\": [\"AI Call Contact Email\", \"AI Call Contact Phone\"],\n          \"Technical\": [\"AI Call Recording\", \"AI Call Timestamp\", \"AI Call Ended Reason\"]\n        };\n        \n        // Display details by category\n        for (const [category, fields] of Object.entries(categories)) {\n          let categoryHasValues = false;\n          let categoryContent = \"\";\n          \n          fields.forEach(field => {\n            if (callDetails[field] && callDetails[field] !== \"none\" && callDetails[field] !== \"not_detected\") {\n              categoryContent += `• ${field.replace('AI Call ', '')}: ${callDetails[field]}\\n`;\n              categoryHasValues = true;\n            }\n          });\n          \n          if (categoryHasValues) {\n            result += `\\n${category}:\\n${categoryContent}`;\n          }\n        }\n        \n        // Add any remaining fields that weren't in specific categories\n        let otherFields = \"\";\n        for (const [key, value] of Object.entries(callDetails)) {\n          if (value && value !== \"none\" && value !== \"not_detected\") {\n            // Check if this field was already included in a category\n            let alreadyIncluded = false;\n            for (const fields of Object.values(categories)) {\n              if (fields.includes(key)) {\n                alreadyIncluded = true;\n                break;\n              }\n            }\n            \n            if (!alreadyIncluded) {\n              otherFields += `• ${key.replace('AI Call ', '')}: ${value}\\n`;\n            }\n          }\n        }\n        \n        if (otherFields) {\n          result += \"\\nOther Details:\\n\" + otherFields;\n        }\n        \n        // Add summary if present\n        if (summary) {\n          result += \"\\n=== CALL SUMMARY ===\\n\" + summary + \"\\n\";\n        }\n        \n        // Add transcript if present (full transcript, but with improved formatting)\n        if (transcript) {\n          result += \"\\n=== FULL TRANSCRIPT ===\\n\\n\";\n          \n          // Improve transcript readability by formatting agent/user exchanges\n          const formattedTranscript = formatTranscript(transcript);\n          result += formattedTranscript + \"\\n\";\n        }\n      } else {\n        // If not in the expected format, just include the raw note body\n        result += \"NOTE CONTENT:\\n\" + noteBody + \"\\n\";\n      }\n    } catch (error) {\n      // Fallback if parsing fails\n      result += \"NOTE CONTENT (raw):\\n\" + note.body + \"\\n\";\n    }\n    \n    // Add separator between notes\n    if (i < notes.length - 1) {\n      result += \"\\n\" + \"=\".repeat(50) + \"\\n\\n\";\n    }\n  }\n  \n  return result;\n}\n\n// Helper function to format transcript for better readability\nfunction formatTranscript(transcript) {\n  // Replace escaped newlines with actual newlines\n  let formatted = transcript.replace(/\\\\n/g, '\\n');\n  \n  // Split into lines\n  const lines = formatted.split('\\n');\n  let result = '';\n  \n  // Process each line\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i].trim();\n    \n    if (line.startsWith('Agent:')) {\n      // Format agent lines\n      result += line + '\\n';\n    } else if (line.startsWith('User:')) {\n      // Add spacing before user responses and format\n      if (i > 0) result += '\\n';\n      result += line + '\\n';\n    } else {\n      // Add other lines as-is\n      result += line + '\\n';\n    }\n  }\n  \n  return result;\n}\n\n\n// Helper function to extract key-value pairs from the pseudo-JSON structure\nfunction extractKeyValuePairs(text) {\n  const entries = [];\n  const lines = text.split(\"\\n\");\n  \n  let currentKey = null;\n  let currentValue = null;\n  \n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i].trim();\n    \n    // Look for key lines\n    if (line.includes(\"\\\"key\\\"\") && line.includes(\":\")) {\n      // Extract the key name\n      const keyMatch = line.match(/\\\"key\\\":\\s*\\\"([^\\\"]+)\\\"/);\n      if (keyMatch && keyMatch[1]) {\n        currentKey = keyMatch[1];\n      }\n    }\n    \n    // Look for field_value lines\n    if (line.includes(\"\\\"field_value\\\"\") && line.includes(\":\")) {\n      // Extract the value\n      const valueMatch = line.match(/\\\"field_value\\\":\\s*\\\"(.*?)\\\"/);\n      if (valueMatch) {\n        // Handle escaped quotes within the value\n        currentValue = valueMatch[1].replace(/\\\\\"/g, '\"').replace(/\\\\\\\\n/g, '\\n');\n        \n        // If we have both key and value, add them to our entries\n        if (currentKey) {\n          entries.push({\n            key: currentKey,\n            value: currentValue\n          });\n          \n          // Reset for next pair\n          currentKey = null;\n          currentValue = null;\n        }\n      }\n    }\n  }\n  \n  return entries;\n}\n\n// Run the function and return the result\nreturn processData();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -304,
        -304
      ],
      "id": "09b79396-2e20-48b5-9b23-f9d8f5e592f5",
      "name": "Code Parse Notes",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=https://services.leadconnectorhq.com/contacts/{{ $('Search Contacts GHL2').item.json.contacts[0].id }}/notes",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set Account Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "text",
              "outputPropertyName": "notes_output"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -528,
        -304
      ],
      "id": "49973492-085c-42a8-bd5b-117f99dcf6c9",
      "name": "Get Notes GHL",
      "retryOnFail": false,
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=https://services.leadconnectorhq.com/conversations/{{ $('Search Conversations GHL').item.json.conversations[0].id }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set Account Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-04-15"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "text",
              "outputPropertyName": "conversations_output"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -752,
        -304
      ],
      "id": "7f6937be-fd5d-4d1e-b929-dce0fa1e0a4e",
      "name": "Get Messages By Conversation ID GHL",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://services.leadconnectorhq.com/conversations/search",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "contactId",
              "value": "={{ $json.contacts[0].id }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set Account Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-04-15"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -976,
        -304
      ],
      "id": "ddca7d5b-2f17-4f99-825a-0e0aff8cf502",
      "name": "Search Conversations GHL",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://services.leadconnectorhq.com/calendars/",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "locationId",
              "value": "={{ $('Set Account Fields').item.json.locationId }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set Account Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-04-15"
            },
            {
              "name": "Accept",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "text",
              "outputPropertyName": "calendars"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -80,
        -304
      ],
      "id": "ee42bb03-886a-4e6b-8bdc-6dfa90abc22a",
      "name": "Get Calendars GHL",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=https://services.leadconnectorhq.com/locations/{{ $('Set Account Fields').item.json.locationId }}/customFields",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set Account Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "text",
              "outputPropertyName": "custom_fields"
            }
          }
        }
      },
      "id": "4f73af8a-c358-4eea-a670-068bc1df01a1",
      "name": "Get Custom Fields GHL",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        144,
        -304
      ],
      "alwaysOutputData": true,
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=https://services.leadconnectorhq.com/locations/{{ $('Set Account Fields').item.json.locationId }}/customValues",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set Account Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "text",
              "outputPropertyName": "custom_values"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        368,
        -304
      ],
      "id": "6ef3d437-39ec-49b8-9a43-218256fc189f",
      "name": "Get Custom Values GHL",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/contacts/search",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set Account Fields').first().json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"locationId\": \"{{ $('Set Account Fields').first().json.locationId }}\",\n  \"page\": 1,\n  \"pageLimit\": 20,\n  \"filters\": [\n    {\n      \"field\": \"phone\",\n      \"operator\": \"eq\",\n      \"value\": \"{{ $('Set Account Fields').first().json.from_number }}\"\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1424,
        -496
      ],
      "id": "31796989-b19d-4dd8-b974-c7f9f7639e15",
      "name": "Search Contacts GHL2",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "11a05c60-5481-4d5b-bbf1-8d56a7273f76",
              "leftValue": "={{ $json.total }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1200,
        -496
      ],
      "id": "4547de86-a22d-442e-b1ad-877d6537490a",
      "name": "If5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/contacts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set Account Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"name\": \"new {{$now.toString()}}\",\n  \"locationId\": \"{{ $('Set Account Fields').item.json.locationId }}\",\n  \"phone\": \"{{ $('Set Account Fields').item.json.from_number }}\",\n  \"tags\": [\n    \"new_inbound_contact\"\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -976,
        -592
      ],
      "id": "42664956-adb2-4208-b4be-388061a18829",
      "name": "Create Contact GHL2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/opportunities/",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set Account Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"pipelineId\": \"{{ $('Set Account Fields').item.json.sales_pipeline_id }}\",\n  \"locationId\": \"{{ $('Set Account Fields').item.json.locationId }}\",\n  \"name\": \"{{ $('Create Contact GHL2').item.json.contact.fullNameLowerCase }}\",\n  \"pipelineStageId\": \"{{ $('Set Account Fields').item.json.sales_pipeline_stage_id }}\",\n   \"status\": \"all\",\n  \"contactId\": \"{{ $('Create Contact GHL2').item.json.contact.id }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -752,
        -592
      ],
      "id": "3956a523-1164-4c99-a836-e5f2bf66c736",
      "name": "Create Opportunity GHL",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Get input data from nodes\nconst customValuesData = $('Get Custom Values GHL1').item.json.custom_values || \"{}\";\nconst customFieldsData = $('Get Custom Fields GHL1').item.json.custom_fields || \"{}\";\nconst contactData = $('Create Contact GHL2').item.json || {}; // Changed: direct object, no string default\nconst conversationsData = $('Search Conversations GHL1').item.json || \"{}\";\nconst messagesOutput = $('Get Messages By Conversation ID GHL1').item.json || \"{}\";\nconst notesOutput = $('Get Notes GHL1').item.json || \"{}\";\nconst formattedNotes = $('Code Parse Notes1').item.json?.readableNotes || \"\";\nconst formattedConversations = $('Code Parse Notes1').item.json?.readableConversations || \"\";\nconst calendarData = $('Get Calendars GHL1').item.json.calendars || \"{}\";\nconst accountFields = $('Set Account Fields').item.json;\n\n// Parse only the JSON strings, not the contact data which is already an object\nconst customValuesObj = JSON.parse(customValuesData);\nconst customFieldsObj = JSON.parse(customFieldsData);\nconst contactObj = contactData; // Changed: no JSON.parse needed\nconst calendarObj = JSON.parse(calendarData);\n\n// Extract the contact data directly from the contact object\nconst contact = contactObj.contact || {};\n\n// Extract custom fields array from both sources\nconst accountCustomFields = customFieldsObj.customFields || [];\nconst contactCustomFields = contact.customFields || [];\nconst accountCustomValues = customValuesObj.customValues || [];\nconst calendars = calendarObj.calendars || [];\n\n// Create a mapping of field IDs to field names and keys\nconst fieldMap = {};\naccountCustomFields.forEach(field => {\n  // Convert field name to snake_case for variable names\n  const snakeCaseName = field.name\n    .toLowerCase()\n    .replace(/[^\\w\\s]/g, '')\n    .replace(/\\s+/g, '_');\n  \n  // If field.fieldKey starts with \"contact.\" remove that prefix\n  let fieldKey = field.fieldKey || \"\";\n  if (fieldKey.startsWith(\"contact.\")) {\n    fieldKey = fieldKey.substring(\"contact.\".length);\n  }\n  \n  fieldMap[field.id] = {\n    name: field.name,\n    fieldKey: fieldKey,\n    snakeCaseName: snakeCaseName\n  };\n  \n  // Also index by fieldKey for easy lookup if it exists\n  if (fieldKey) {\n    fieldMap[fieldKey] = {\n      name: field.name,\n      id: field.id,\n      snakeCaseName: snakeCaseName\n    };\n  }\n});\n\n// Create an object to store contact field values\nconst contactFieldValues = {};\n\n// Populate values from contact custom fields\ncontactCustomFields.forEach(field => {\n  if (fieldMap[field.id]) {\n    // Convert values to strings\n    contactFieldValues[fieldMap[field.id].snakeCaseName] = String(field.value || \"\");\n  }\n});\n\n// Safely get custom values with fallbacks for resilience\nconst getCustomValue = (name) => {\n  const value = accountCustomValues.find(cv => cv.name === name)?.value;\n  // Convert to string if it exists\n  return value !== undefined ? String(value) : '';\n};\n\n// Get essential values (using safe accessor functions)\nconst voiceAgentId = getCustomValue('Voice AI Agent ID Inbound');\nconst voiceAgentName = getCustomValue('Voice AI Agent Name Inbound');\nconst voiceAgentApiKey = getCustomValue('AI Call API Key');\n\n// Get optional values (won't break if they don't exist)\nconst salesCalendar1 = getCustomValue('Sales Calendar 1');\nconst salesCalendar2 = getCustomValue('Sales Calendar 2');\nconst onboardingCalendar = getCustomValue('Onboarding Calendar');\nconst customerSuccessCalendar = getCustomValue('Customer Success Calendar');\nconst businessName = getCustomValue('Business Name');\n\n// Format contact name with proper capitalization\nconst firstName = contact.firstNameLowerCase ? \n  contact.firstNameLowerCase.charAt(0).toUpperCase() + contact.firstNameLowerCase.slice(1) : \n  '';\nconst lastName = contact.lastNameLowerCase ? \n  contact.lastNameLowerCase.charAt(0).toUpperCase() + contact.lastNameLowerCase.slice(1) : \n  '';\nconst fullName = `${firstName} ${lastName}`.trim() || 'none';\n\n// Create a complete mapping of all calendars (no hardcoded names)\nconst calendarMap = {};\ncalendars.forEach(calendar => {\n  // Store by both original name and snake_case name for flexibility\n  const calendarName = calendar.name || \"\";\n  const snakeCaseName = calendarName\n    .toLowerCase()\n    .replace(/[^\\w\\s]/g, '')\n    .replace(/\\s+/g, '_');\n  \n  calendarMap[calendarName] = calendar.id;\n  calendarMap[snakeCaseName] = calendar.id;\n});\n\n// Dynamically detect and categorize calendars based on naming patterns\nconst calendarTypes = {\n  sales: ['sales', 'discovery', 'consultation'],\n  onboarding: ['onboarding', 'welcome', 'orientation'],\n  customer_success: ['success', 'support', 'check-in', 'checkin', 'follow-up', 'followup'],\n  referral: ['referral', 'partner']\n};\n\n// Initialize the calendar types object\nconst detectedCalendarTypes = {};\n\n// Map each calendar to a type based on name patterns\nObject.entries(calendarMap).forEach(([calendarName, calendarId]) => {\n  // Skip snake_case duplicates\n  if (calendarName.includes('_')) return;\n  \n  const lowerName = calendarName.toLowerCase();\n  \n  // Try to categorize this calendar\n  for (const [type, keywords] of Object.entries(calendarTypes)) {\n    if (keywords.some(keyword => lowerName.includes(keyword))) {\n      // First match for this type becomes the primary calendar for that type\n      if (!detectedCalendarTypes[type]) {\n        detectedCalendarTypes[type] = String(calendarId);\n      }\n    }\n  }\n});\n\n// Get connection details from Set Account Fields\nconst toNumber = String(accountFields.to_number || '');\nconst fromNumber = String(accountFields.from_number || '');\nconst privateIntegrationToken = String(accountFields.Authorization || '');\nconst locationId = String(accountFields.locationId || '');\nconst accountTimezone = String(accountFields['Account Timezone'] || 'America/New_York');\n\n// Create the dynamic variables object with all the enhanced context\nconst dynamicVariables = {\n  // Basic contact info\n  name: String(firstName || 'none'),\n  phone: String(contact.phone || 'none'),\n  email: String(contact.email || 'none'),\n  address: String(contact.address || 'none'),\n  full_name: String(fullName),\n  business_name: String(contact.businessName || contact.companyName || 'none'),\n  contact_id: String(contact.id || ''),\n  location_id: locationId,\n  private_integration_token: privateIntegrationToken,\n  account_company_name: businessName,\n  from_number: fromNumber,\n  to_number: toNumber,\n  account_timezone: accountTimezone,\n  voice_ai_agent_name: voiceAgentName,\n  voice_ai_agent_id: voiceAgentId,\n  voice_ai_agent_api_key: voiceAgentApiKey,\n  \n  // Calendar IDs (conditionally added)\n  sales_calendar_id: detectedCalendarTypes.sales || salesCalendar1 || '',\n  sales2_calendar_id: detectedCalendarTypes.referral || salesCalendar2 || '',\n  onboarding_calendar_id: detectedCalendarTypes.onboarding || onboardingCalendar || '',\n  customer_success_calendar_id: detectedCalendarTypes.customer_success || customerSuccessCalendar || '',\n  \n  // Add conversation and notes history\n  conversation_history: formattedConversations,\n  notes_history: formattedNotes,\n  \n  // Tags (if available)\n  tags: Array.isArray(contact.tags) ? contact.tags.map(tag => String(tag)).join(', ') : ''\n};\n\n// Add all custom field IDs and values to the dynamicVariables\naccountCustomFields.forEach(field => {\n  const snakeCaseName = fieldMap[field.id]?.snakeCaseName;\n  if (snakeCaseName) {\n    // Add field ID with snake_case format (with _id suffix)\n    dynamicVariables[`${snakeCaseName}_id`] = String(field.id);\n    \n    // Only add field values that actually exist for this contact\n    if (contactFieldValues[snakeCaseName] !== undefined) {\n      dynamicVariables[snakeCaseName] = contactFieldValues[snakeCaseName];\n    }\n  }\n});\n\n// Calendar map for easy access to all calendars\ndynamicVariables.calendar_map = JSON.stringify(calendarMap);\n\n// Create the call_inbound format structure (maintaining original format)\nconst callInbound = {\n  call_inbound: {\n    dynamic_variables: dynamicVariables\n  }\n};\n\n// Convert the object to a properly formatted JSON string\nconst jsonString = JSON.stringify(callInbound, null, 2);\n\n// Return an object with the jsonString as an easily mappable property\nreturn { jsonBody: jsonString };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1264,
        -592
      ],
      "id": "6231b92f-b192-48e8-b513-4eebfa862327",
      "name": "Match Final Values1",
      "executeOnce": false,
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $('Match Final Values1').first().json.jsonBody }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1488,
        -592
      ],
      "id": "b8539c04-7dc2-4b3e-9b45-f0429a4f576c",
      "name": "Respond to Webhook9"
    },
    {
      "parameters": {
        "jsCode": "// Improved notes parser that's more dynamic and robust\nfunction processData() {\n  try {\n    // Get the raw outputs from the nodes\n    const conversationsRaw = $('Get Messages By Conversation ID GHL1').item.json.conversations_output;\n    const notesRaw = $('Get Notes GHL1').item.json.notes_output;\n    \n    // Parse the JSON strings\n    const conversationsData = JSON.parse(conversationsRaw);\n    const notesData = JSON.parse(notesRaw);\n    \n    // Format the data for humans and AI consumption\n    const readableConversations = formatConversations(conversationsData);\n    const readableNotes = formatNotesImproved(notesData);\n    \n    // Return the result\n    return [{ \n      json: {\n        readableConversations: readableConversations,\n        readableNotes: readableNotes\n      } \n    }];\n  } catch (error) {\n    return [{ json: { error: error.message } }];\n  }\n}\n\n// Format conversations (keeping existing implementation)\nfunction formatConversations(data) {\n  let result = \"== CONVERSATION HISTORY ==\\n\\n\";\n  \n  if (!data.messages || !data.messages.messages || data.messages.messages.length === 0) {\n    return result + \"No conversations found.\";\n  }\n  \n  const messages = data.messages.messages;\n  \n  for (let i = 0; i < messages.length; i++) {\n    const msg = messages[i];\n    \n    // Add date\n    result += \"[\" + new Date(msg.dateAdded).toLocaleString() + \"] \";\n    \n    // Add direction\n    if (msg.direction === \"inbound\") {\n      result += \"INCOMING \";\n    } else {\n      result += \"OUTGOING \";\n    }\n    \n    // Add type\n    if (msg.messageType === \"TYPE_ACTIVITY_OPPORTUNITY\") {\n      result += \"Opportunity Activity\";\n    } else if (msg.messageType === \"TYPE_SMS\") {\n      result += \"SMS\";\n    } else if (msg.messageType === \"TYPE_CALL\") {\n      result += \"Call\";\n    } else {\n      result += msg.messageType;\n    }\n    \n    // Add status if available\n    if (msg.status) {\n      result += \" (\" + msg.status + \")\";\n    }\n    \n    result += \":\\n\";\n    \n    // Add body if available\n    if (msg.body) {\n      result += msg.body + \"\\n\";\n    }\n    \n    // Add separator\n    if (i < messages.length - 1) {\n      result += \"\\n--------------------------------------------------\\n\\n\";\n    }\n  }\n  \n  return result;\n}\n\n// Improved notes formatter that's more flexible\nfunction formatNotesImproved(data) {\n  let result = \"== CONTACT NOTES ==\\n\\n\";\n  \n  if (!data.notes || data.notes.length === 0) {\n    return result + \"No notes found.\";\n  }\n  \n  const notes = data.notes;\n  \n  for (let i = 0; i < notes.length; i++) {\n    const note = notes[i];\n    \n    result += \"NOTE CREATED: \" + new Date(note.dateAdded).toLocaleString() + \"\\n\\n\";\n    \n    // Extract data dynamically from the note body\n    try {\n      // Get the note body and try to parse key-value pairs\n      const noteBody = note.body;\n      \n      // Check if the note body looks like it contains JSON-like key-value pairs\n      if (noteBody.includes(\"\\\"key\\\"\") && noteBody.includes(\"\\\"field_value\\\"\")) {\n        // Parse the pseudo-JSON structure\n        const entries = extractKeyValuePairs(noteBody);\n        \n        // Group entries by category\n        const callDetails = {};\n        let transcript = \"\";\n        let summary = \"\";\n        \n        // Process each entry\n        entries.forEach(entry => {\n          const key = entry.key;\n          const value = entry.value;\n          \n          // Handle special cases\n          if (key === \"AI Call Transcript\") {\n            transcript = value;\n          } else if (key === \"AI Call Summary\") {\n            summary = value;\n          } else {\n            // Store other fields in the details object\n            callDetails[key] = value;\n          }\n        });\n        \n        // Output formatted data (Details first)\n        result += \"=== CALL DETAILS ===\\n\";\n        \n        // Organize details into categories for better readability\n        const categories = {\n          \"Basic Info\": [\"AI Call Type\", \"AI Call Contact Name\", \"AI Call Duration\"],\n          \"Outcome\": [\"AI Call Outcome\", \"AI Call Outcome Reason\"],\n          \"Appointment\": [\"AI Call Appointment DateTime\"],\n          \"Contact Info\": [\"AI Call Contact Email\", \"AI Call Contact Phone\"],\n          \"Technical\": [\"AI Call Recording\", \"AI Call Timestamp\", \"AI Call Ended Reason\"]\n        };\n        \n        // Display details by category\n        for (const [category, fields] of Object.entries(categories)) {\n          let categoryHasValues = false;\n          let categoryContent = \"\";\n          \n          fields.forEach(field => {\n            if (callDetails[field] && callDetails[field] !== \"none\" && callDetails[field] !== \"not_detected\") {\n              categoryContent += `• ${field.replace('AI Call ', '')}: ${callDetails[field]}\\n`;\n              categoryHasValues = true;\n            }\n          });\n          \n          if (categoryHasValues) {\n            result += `\\n${category}:\\n${categoryContent}`;\n          }\n        }\n        \n        // Add any remaining fields that weren't in specific categories\n        let otherFields = \"\";\n        for (const [key, value] of Object.entries(callDetails)) {\n          if (value && value !== \"none\" && value !== \"not_detected\") {\n            // Check if this field was already included in a category\n            let alreadyIncluded = false;\n            for (const fields of Object.values(categories)) {\n              if (fields.includes(key)) {\n                alreadyIncluded = true;\n                break;\n              }\n            }\n            \n            if (!alreadyIncluded) {\n              otherFields += `• ${key.replace('AI Call ', '')}: ${value}\\n`;\n            }\n          }\n        }\n        \n        if (otherFields) {\n          result += \"\\nOther Details:\\n\" + otherFields;\n        }\n        \n        // Add summary if present\n        if (summary) {\n          result += \"\\n=== CALL SUMMARY ===\\n\" + summary + \"\\n\";\n        }\n        \n        // Add transcript if present (full transcript, but with improved formatting)\n        if (transcript) {\n          result += \"\\n=== FULL TRANSCRIPT ===\\n\\n\";\n          \n          // Improve transcript readability by formatting agent/user exchanges\n          const formattedTranscript = formatTranscript(transcript);\n          result += formattedTranscript + \"\\n\";\n        }\n      } else {\n        // If not in the expected format, just include the raw note body\n        result += \"NOTE CONTENT:\\n\" + noteBody + \"\\n\";\n      }\n    } catch (error) {\n      // Fallback if parsing fails\n      result += \"NOTE CONTENT (raw):\\n\" + note.body + \"\\n\";\n    }\n    \n    // Add separator between notes\n    if (i < notes.length - 1) {\n      result += \"\\n\" + \"=\".repeat(50) + \"\\n\\n\";\n    }\n  }\n  \n  return result;\n}\n\n// Helper function to format transcript for better readability\nfunction formatTranscript(transcript) {\n  // Replace escaped newlines with actual newlines\n  let formatted = transcript.replace(/\\\\n/g, '\\n');\n  \n  // Split into lines\n  const lines = formatted.split('\\n');\n  let result = '';\n  \n  // Process each line\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i].trim();\n    \n    if (line.startsWith('Agent:')) {\n      // Format agent lines\n      result += line + '\\n';\n    } else if (line.startsWith('User:')) {\n      // Add spacing before user responses and format\n      if (i > 0) result += '\\n';\n      result += line + '\\n';\n    } else {\n      // Add other lines as-is\n      result += line + '\\n';\n    }\n  }\n  \n  return result;\n}\n\n\n// Helper function to extract key-value pairs from the pseudo-JSON structure\nfunction extractKeyValuePairs(text) {\n  const entries = [];\n  const lines = text.split(\"\\n\");\n  \n  let currentKey = null;\n  let currentValue = null;\n  \n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i].trim();\n    \n    // Look for key lines\n    if (line.includes(\"\\\"key\\\"\") && line.includes(\":\")) {\n      // Extract the key name\n      const keyMatch = line.match(/\\\"key\\\":\\s*\\\"([^\\\"]+)\\\"/);\n      if (keyMatch && keyMatch[1]) {\n        currentKey = keyMatch[1];\n      }\n    }\n    \n    // Look for field_value lines\n    if (line.includes(\"\\\"field_value\\\"\") && line.includes(\":\")) {\n      // Extract the value\n      const valueMatch = line.match(/\\\"field_value\\\":\\s*\\\"(.*?)\\\"/);\n      if (valueMatch) {\n        // Handle escaped quotes within the value\n        currentValue = valueMatch[1].replace(/\\\\\"/g, '\"').replace(/\\\\\\\\n/g, '\\n');\n        \n        // If we have both key and value, add them to our entries\n        if (currentKey) {\n          entries.push({\n            key: currentKey,\n            value: currentValue\n          });\n          \n          // Reset for next pair\n          currentKey = null;\n          currentValue = null;\n        }\n      }\n    }\n  }\n  \n  return entries;\n}\n\n// Run the function and return the result\nreturn processData();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        368,
        -592
      ],
      "id": "213e86e5-4843-4c9a-96fb-5661ce596c6c",
      "name": "Code Parse Notes1",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=https://services.leadconnectorhq.com/contacts/{{ $('Create Contact GHL2').item.json.contact.id }}/notes",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set Account Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "text",
              "outputPropertyName": "notes_output"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        144,
        -592
      ],
      "id": "0518493b-0511-4864-806c-39cf2141be82",
      "name": "Get Notes GHL1",
      "retryOnFail": false,
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=https://services.leadconnectorhq.com/conversations/{{ $('Search Conversations GHL1').item.json.conversations[0].id }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set Account Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-04-15"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "text",
              "outputPropertyName": "conversations_output"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -80,
        -592
      ],
      "id": "945512cf-90bc-4b7a-965b-7abe93ca7773",
      "name": "Get Messages By Conversation ID GHL1",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://services.leadconnectorhq.com/conversations/search",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "contactId",
              "value": "={{ $('Create Contact GHL2').item.json.contact.id }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set Account Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-04-15"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -304,
        -592
      ],
      "id": "18208e4f-d5ba-4a5c-82cf-d3a7b734067f",
      "name": "Search Conversations GHL1",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://services.leadconnectorhq.com/calendars/",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "locationId",
              "value": "={{ $('Set Account Fields').item.json.locationId }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set Account Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-04-15"
            },
            {
              "name": "Accept",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "text",
              "outputPropertyName": "calendars"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        592,
        -592
      ],
      "id": "b4294dbb-f908-4ae3-92d7-69fe30183d25",
      "name": "Get Calendars GHL1",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=https://services.leadconnectorhq.com/locations/{{ $('Set Account Fields').item.json.locationId }}/customFields",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set Account Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "text",
              "outputPropertyName": "custom_fields"
            }
          }
        }
      },
      "id": "ea702152-e25c-4007-aeb7-9684210b353f",
      "name": "Get Custom Fields GHL1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        816,
        -592
      ],
      "alwaysOutputData": true,
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=https://services.leadconnectorhq.com/locations/{{ $('Set Account Fields').item.json.locationId }}/customValues",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set Account Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "text",
              "outputPropertyName": "custom_values"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1040,
        -592
      ],
      "id": "c81c0614-0cc9-4d49-a6a7-89b9a98c73c2",
      "name": "Get Custom Values GHL1",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -528,
        -592
      ],
      "id": "4e4d5bb9-31bc-4a81-9c22-ce248b882566",
      "name": "Wait",
      "webhookId": "dcd131e8-2368-4129-a12e-c50c59963778"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "=QfgkTflSBUyuzUi1",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -1872,
        -304
      ],
      "id": "f59f0d22-edf5-49d8-b008-c6b1e85e2c44",
      "name": "Execute Workflow Trigger Call"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "=zBMLQGyUAsR73oeN",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -1872,
        -112
      ],
      "id": "105a58fc-786b-4945-b14d-252557fcdd3e",
      "name": "Execute Workflow End Of Call Report"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -1648,
        -112
      ],
      "id": "0ba50be6-584f-4c01-9e6a-4e6da5dc5228",
      "name": "Respond to Webhook3"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -1648,
        -304
      ],
      "id": "aa515265-52a4-47a8-b753-c1fcb3f8b5c7",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "url": "=https://services.leadconnectorhq.com/calendars/{{ $('Set get_free_slots Fields').item.json.calendar_id }}/free-slots",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "startDate",
              "value": "={{ $json.start_date }}"
            },
            {
              "name": "endDate",
              "value": "={{ $json.end_date }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set get_free_slots Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-04-15"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "text",
              "outputPropertyName": "free_slots"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1424,
        80
      ],
      "id": "6b4f1d0d-961f-4e15-8095-f8ba86ec3ce0",
      "name": "Get Free Slots GHL"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8a6d74ca-7a0d-46d4-aded-de2b596b9e10",
              "leftValue": "={{ $('Get Free Slots GHL').item.json.free_slots }}",
              "rightValue": "slots",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1200,
        80
      ],
      "id": "acc2dd5a-89e3-4f6f-9e85-592d39f43668",
      "name": "If"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ JSON.stringify($('Get Free Slots GHL').item.json.free_slots) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -976,
        -112
      ],
      "id": "04963d61-e39a-41a4-b91d-54334963555b",
      "name": "Respond to Webhook2"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ JSON.stringify(\"No availability for the requested date, please suggest a new date to chaeck for availability. Ask user for a new date to check availability.\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -976,
        176
      ],
      "id": "c152397c-ddb1-4dcd-bb07-a47788d49880",
      "name": "Respond to Webhook4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/contacts/search",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set create_appointment Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"locationId\": \"{{ $('Set create_appointment Fields').item.json['Location ID'] }}\",\n  \"page\": 1,\n  \"pageLimit\": 20,\n  \"filters\": [\n    {\n      \"field\": \"phone\",\n      \"operator\": \"eq\",\n      \"value\": \"+1{{ $('Set create_appointment Fields').item.json.phone }}\"\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1648,
        464
      ],
      "id": "f60b7881-ab66-4c23-be82-98689d51111a",
      "name": "Search Contacts GHL1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/calendars/events/appointments",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set create_appointment Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-04-15"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "calendarId",
              "value": "={{ $('Set create_appointment Fields').item.json.calendar_id }}"
            },
            {
              "name": "locationId",
              "value": "={{ $('Set create_appointment Fields').item.json['Location ID'] }}"
            },
            {
              "name": "contactId",
              "value": "={{ $json.contacts[0].id }}"
            },
            {
              "name": "startTime",
              "value": "={{ $('Set create_appointment Fields').item.json.start_time }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1424,
        464
      ],
      "id": "a93598ce-7a10-4330-a23d-e95c14079860",
      "name": "Create Appointment GHL",
      "retryOnFail": false
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ JSON.stringify($('Create Appointment GHL').item.json.title + \", \" + $('Create Appointment GHL').item.json.status + \", \" + $('Create Appointment GHL').item.json.appoinmentStatus + \", google meet\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -976,
        368
      ],
      "id": "790cabdf-7c66-4599-b4a6-962f0abb1957",
      "name": "Respond to Webhook5"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7d2926c7-3bc3-457d-8d99-8593c748e6fb",
              "leftValue": "={{ $('Create Appointment GHL').first().json.id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1200,
        464
      ],
      "id": "dd3e60f7-3178-4ada-b9c1-05df98af052b",
      "name": "If2"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ JSON.stringify(\"We had an issue booking the appointment, please let the caller know that we will reach out to confirm the appointment and all is well and we can assume the requested time is good to go.\" ) }}",
        "options": {}
      },
      "id": "4a9c5782-0714-4e55-8d62-5f45088cc38a",
      "name": "Respond to Webhook6",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -976,
        560
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/contacts/search",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set send_message Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"locationId\": \"{{ $('Set send_message Fields').item.json['Location ID'] }}\",\n  \"page\": 1,\n  \"pageLimit\": 20,\n  \"filters\": [\n    {\n      \"field\": \"phone\",\n      \"operator\": \"eq\",\n      \"value\": \"{{ $('Switch').item.json.body.call.from_number }}\"\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1424,
        752
      ],
      "id": "56e9c1ab-5c47-4f2d-9b3c-3cb6d9b5e6df",
      "name": "Search Contacts GHL3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/conversations/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set send_message Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-04-15"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"type\": \"SMS\",\n  \"contactId\": \"{{ $('Search Contacts GHL3').item.json.contacts[0].id }}\",\n  \"message\": {{ JSON.stringify($('Set send_message Fields').item.json.sms_message )}},\n   \"fromNumber\": \"{{ $('Webhook').item.json.body.call.to_number }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1200,
        752
      ],
      "id": "a171ad3c-028e-4987-b7af-15aad29ae8db",
      "name": "Send A New SMS Message GHL",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ JSON.stringify(\"We sent over the text please let the caller know they should recieve it shortly. Go ahead and pick up in the prompt where you left off\" ) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -976,
        752
      ],
      "id": "8e42b6f4-3d29-4002-bad3-8ffaea828f70",
      "name": "Respond to Webhook10"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json.body.call.direction }}",
                    "rightValue": "=inbound",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "d03cf086-29f0-4403-a0db-a983e0689f25"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "inbound_call"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3394b509-b108-4f39-9e1e-dbece42af7ee",
                    "leftValue": "={{ $('Webhook').item.json.body.call.direction }}",
                    "rightValue": "outbound",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "outbound_call"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1648,
        848
      ],
      "id": "34857611-f525-43f4-8147-ec8774bb9696",
      "name": "Switch1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/contacts/search",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set send_message Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"locationId\": \"{{ $('Set send_message Fields').item.json['Location ID'] }}\",\n  \"page\": 1,\n  \"pageLimit\": 20,\n  \"filters\": [\n    {\n      \"field\": \"phone\",\n      \"operator\": \"eq\",\n      \"value\": \"{{ $('Switch').item.json.body.call.to_number }}\"\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1424,
        944
      ],
      "id": "f03c1572-295d-4556-8f1b-105f7bef7cb1",
      "name": "Search Contacts GHL4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/conversations/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set send_message Fields').item.json.Authorization }}"
            },
            {
              "name": "Version",
              "value": "2021-04-15"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"type\": \"SMS\",\n  \"contactId\": \"{{ $('Search Contacts GHL4').item.json.contacts[0].id }}\",\n  \"message\": {{ JSON.stringify($('Set send_message Fields').item.json.sms_message) }},\n   \"fromNumber\": \"{{ $('Webhook').item.json.body.call.from_number }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1200,
        944
      ],
      "id": "701e0a68-9011-4891-8a75-7f604624db1a",
      "name": "Send A New SMS Message GHL1",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ JSON.stringify(\"We sent over the text please let the caller know they should recieve it shortly. Go ahead and pick up in the prompt where you left off\" ) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -976,
        944
      ],
      "id": "b32b9f71-635d-491e-abd9-3fd3684bfe90",
      "name": "Respond to Webhook11"
    },
    {
      "parameters": {
        "jsCode": "// Code node before \"Get Free Slots GHL\" - Automatically caps at 31 days\nconst startDateString = $input.item.json.start_date; // Your ISO date\nconst endDateString = $input.item.json.end_date;\n\n// Convert to Date objects for easier manipulation\nconst startDate = new Date(startDateString);\nconst endDate = new Date(endDateString);\n\n// Calculate the difference in days\nconst diffInMs = endDate.getTime() - startDate.getTime();\nconst diffInDays = Math.ceil(diffInMs / (1000 * 60 * 60 * 24));\n\n// Create adjusted end date if needed\nlet finalEndDate = endDate;\nlet wasAdjusted = false;\nlet originalDays = diffInDays;\n\n// If difference is more than 31 days, cap it at 31 days\nif (diffInDays > 31) {\n  finalEndDate = new Date(startDate);\n  finalEndDate.setDate(finalEndDate.getDate() + 30); // Using 30 to be safe (0-30 = 31 days inclusive)\n  wasAdjusted = true;\n}\n\n// Convert to Unix timestamps (milliseconds) for GHL API\nconst startTimestamp = startDate.getTime();\nconst endTimestamp = finalEndDate.getTime();\n\n// Optional: Add human-readable dates for debugging\nconst startDateReadable = startDate.toLocaleDateString('en-US', { \n  month: 'short', \n  day: 'numeric', \n  year: 'numeric' \n});\nconst endDateReadable = finalEndDate.toLocaleDateString('en-US', { \n  month: 'short', \n  day: 'numeric', \n  year: 'numeric' \n});\n\nreturn {\n  json: {\n    // Main fields for API\n    calendar_id: $input.item.json.calendar_id,\n    Authorization: $input.item.json.Authorization,\n    start_date: startTimestamp,  // Unix timestamp like 1727280000000\n    end_date: endTimestamp,       // Unix timestamp (capped at 31 days)\n    \n    // Debug/Info fields (optional - remove if not needed)\n    date_info: {\n      start_readable: startDateReadable,\n      end_readable: endDateReadable,\n      days_in_range: Math.ceil((endTimestamp - startTimestamp) / (1000 * 60 * 60 * 24)) + 1,\n      was_adjusted: wasAdjusted,\n      original_days_requested: wasAdjusted ? originalDays : diffInDays,\n      adjustment_note: wasAdjusted ? `Range reduced from ${originalDays} to 31 days` : 'No adjustment needed'\n    }\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1648,
        80
      ],
      "id": "26fed2c9-f657-4763-b0e6-cdb29a97e830",
      "name": "Code in JavaScript"
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Account Fields": {
      "main": [
        [
          {
            "node": "Search Contacts GHL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Set Account Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow Trigger Call",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow End Of Call Report",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set get_free_slots Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set create_appointment Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set send_message Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set get_free_slots Fields": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set create_appointment Fields": {
      "main": [
        [
          {
            "node": "Search Contacts GHL1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set send_message Fields": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Contacts GHL": {
      "main": [
        [
          {
            "node": "Search Contacts GHL2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Match Final Values": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Parse Notes": {
      "main": [
        [
          {
            "node": "Get Calendars GHL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Notes GHL": {
      "main": [
        [
          {
            "node": "Code Parse Notes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Messages By Conversation ID GHL": {
      "main": [
        [
          {
            "node": "Get Notes GHL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Conversations GHL": {
      "main": [
        [
          {
            "node": "Get Messages By Conversation ID GHL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Calendars GHL": {
      "main": [
        [
          {
            "node": "Get Custom Fields GHL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Custom Fields GHL": {
      "main": [
        [
          {
            "node": "Get Custom Values GHL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Custom Values GHL": {
      "main": [
        [
          {
            "node": "Match Final Values",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Contacts GHL2": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Create Contact GHL2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Search Conversations GHL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Contact GHL2": {
      "main": [
        [
          {
            "node": "Create Opportunity GHL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Opportunity GHL": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Match Final Values1": {
      "main": [
        [
          {
            "node": "Respond to Webhook9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Parse Notes1": {
      "main": [
        [
          {
            "node": "Get Calendars GHL1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Notes GHL1": {
      "main": [
        [
          {
            "node": "Code Parse Notes1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Messages By Conversation ID GHL1": {
      "main": [
        [
          {
            "node": "Get Notes GHL1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Conversations GHL1": {
      "main": [
        [
          {
            "node": "Get Messages By Conversation ID GHL1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Calendars GHL1": {
      "main": [
        [
          {
            "node": "Get Custom Fields GHL1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Custom Fields GHL1": {
      "main": [
        [
          {
            "node": "Get Custom Values GHL1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Custom Values GHL1": {
      "main": [
        [
          {
            "node": "Match Final Values1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Search Conversations GHL1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger Call": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow End Of Call Report": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Free Slots GHL": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond to Webhook4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Contacts GHL1": {
      "main": [
        [
          {
            "node": "Create Appointment GHL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Appointment GHL": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Respond to Webhook5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond to Webhook6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Contacts GHL3": {
      "main": [
        [
          {
            "node": "Send A New SMS Message GHL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send A New SMS Message GHL": {
      "main": [
        [
          {
            "node": "Respond to Webhook10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Search Contacts GHL3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Search Contacts GHL4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Contacts GHL4": {
      "main": [
        [
          {
            "node": "Send A New SMS Message GHL1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send A New SMS Message GHL1": {
      "main": [
        [
          {
            "node": "Respond to Webhook11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Get Free Slots GHL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {
    "Webhook": [
      {
        "headers": {
          "connection": "upgrade",
          "host": "n8n.callreceptionist.com",
          "x-real-ip": "100.20.5.228",
          "x-forwarded-for": "100.20.5.228",
          "x-forwarded-proto": "https",
          "content-length": "59459",
          "accept": "application/json, text/plain, */*",
          "content-type": "application/json",
          "x-retell-signature": "v=1759361117003,d=6c1908c06fccc66654c2a1b95e95553d4dbeea9f204a4413ad00e5a28f9fb13b",
          "user-agent": "axios/1.11.0",
          "accept-encoding": "gzip, compress, deflate, br"
        },
        "params": {},
        "query": {},
        "body": {
          "call": {
            "call_id": "call_8eeca6d4a2fd73ed183b0a49da4",
            "call_type": "phone_call",
            "agent_id": "agent_d35f502a39949493ad425614ac",
            "agent_version": 23,
            "agent_name": "Lyf- Never Visited",
            "retell_llm_dynamic_variables": {
              "name": "Roberto",
              "phone": "+13053008788",
              "email": "rcepero56@gmail.com",
              "address": "1520 SW 145 Ave",
              "full_name": "Roberto Cepero",
              "business_name": "none",
              "contact_id": "wLGflIT7OOevHPP9nAcI",
              "location_id": "86RdyK8qJfvwH7xvXASR",
              "private_integration_token": "pit-c7a42ee5-429a-4e18-bb42-93a7844bfdda",
              "account_company_name": "",
              "from_number": "+18555788510",
              "to_number": "+13053008788",
              "account_timezone": "America/New_York",
              "voice_ai_agent_name": "",
              "voice_ai_agent_id": "",
              "voice_ai_agent_api_key": "key_37257513e63ac4cba3ba03bfe5f0",
              "retell_api_key": "key_37257513e63ac4cba3ba03bfe5f0",
              "sales_calendar_id": "PT34AelaWCxtnk3K9rWd",
              "sales2_calendar_id": "",
              "onboarding_calendar_id": "9DUO6dM2gUOytaFtyBis",
              "customer_success_calendar_id": "0fmofabllsoX1DbCSKXL",
              "conversation_history": "",
              "notes_history": "",
              "tags": "lyf aesthetics, lyf- never visited, start multi ai call, answered_callback_requested (call), answered_interested (call), answered_appointment_scheduled (call), no_answer (call), answered",
              "contact_status_id": "BjFLCEGXYnB4lEABm3AK",
              "gfe_file_id": "0oGizL0gqqVii5vKo51p",
              "what_is_your_typical_skin_sensitivity_level_id": "3IZKvzW3GgfyGBf9x1Ev",
              "due_to_the_nature_of_this_treatment_we_require_a_minimum_of_2_areas_however_with_this_promotion_we_are_willing_to_cover_one_area_for_free_and_we_just_ask_that_you_cover_the_second_area_so_we_can_ensure_your_treatment_is_balanced_and_gives_you_the_results_youre_looking_for_our_absolute_biggest_discount_in_the_area_saving_up_to_250__id": "50sZBhpzqHNqoWFPIfbn",
              "event_date_id": "66qYDgPnqWlijifZTHYx",
              "explain_anything_more_you_would_like_us_to_know_regarding_your_skin_id": "7SIJdK9s0bkvonEGvW5l",
              "what_areas_are_you_trying_to_relax_please_select_a_minimum_of_2_id": "96As9LZDeZ7gftn3chT5",
              "how_frequently_do_you_get_treatments_if_you_dont_currently_then_how_long_would_you_like_to_maintain_your_results_for__id": "8oU5e7IS0nwRkk97Q0y2",
              "what_is_your_current_skincare_routine_and_are_there_any_specific_products_that_your_skin_loves_or_reacts_to_negatively_id": "CyqA8uEdlTorSWNqWlzV",
              "do_you_have_any_other_skin_concerns_youd_like_to_addressalleviate_acne_scarring_blemishes_dryness_etc_id": "Ftkgavr2Bd1zK3tZOjvG",
              "do_you_have_any_specific_skin_concerns_id": "GIcVw8HLiFcW2AOuGQwr",
              "gender_id": "KeIfnCUC1GkuMCY74gCX",
              "shipping_state_id": "R0p7eZbtXBrwkDIBw00e",
              "shipping_address_id": "SD7RNTiO4q5mnrXn4PV5",
              "ar_referral_source_id": "SptTXgPSvFrieD558eB5",
              "most_recent_invoice_id": "YZ07gujhWyLvqWltUn5f",
              "lifetime_value_id": "YGXlCo8pSkdblGjkxsgI",
              "lifetime_value": "1890.39",
              "same_shipping_id": "YQIMxgWd2rw1352NyfAC",
              "shipping_city_id": "aBYALxECdGyD33QtDnIK",
              "shipping_postal_code_id": "aje5C4g6j1IxEIsYsIQ7",
              "are_you_interested_in_products_services_or_both_id": "eLiCFhrI8HKK1a4Xeh1e",
              "_this_advanced_lip_flip_treatment_enhances_volume_smooths_fine_lines_and_provides_a_beautifully_plump_youthful_look_that_lasts_up_to_several_months_the_perfect_way_to_enhance_your_natural_beauty_and_complete_your_look_id": "iZFKLI7EYGifxGikPUEw",
              "how_does_your_skin_react_to_the_sun_id": "tj6DNQgkzZRq6W7uevd6",
              "ar_clinic_id_id": "ul5n8Z3QnbUSz9vFsrqD",
              "how_would_you_describe_your_skins_texture_id": "yvHoEu88WZDZcpkk16mE",
              "have_you_had_botox_before_id": "WkNGgXdg2kZDHMkPm0C0",
              "date_picker_15dg_id": "aRytm684VcCM6yyd0QfM",
              "are_there_any_specific_skin_concerns_youd_like_to_address_id": "2tEbnme4MANGh3G7V5mm",
              "do_you_have_any_allergies_or_sensitivities_we_should_know_about_id": "JGk0wE2xpFQmoZ3onfGJ",
              "what_type_of_skin_do_you_have_id": "MqkAgxpTsGfpC3u8WrJ7",
              "what_are_your_main_goals_for_this_treatment_id": "injOi49x4wuzEwvsUuy6",
              "choose_your_glowup_service_id": "SUDwXBoXsHMButhJsPby",
              "_if_yes_when_was_your_last_treatment_id": "KgK4FlI7OVwVTlws0aZ8",
              "anything_else_we_should_know_id": "bdSXkpUhYbj4HAJLzsW1",
              "have_you_received_tox_before_id": "pQfTbnVWxTBmU2QpyNnS",
              "want_to_enhance_your_results_with_a_lip_flipat_50_off_id": "2THOtJ4sDCbTcDhMVhOm",
              "what_areas_are_you_hoping_to_smooth_or_soften_id": "P1WBaJx8QwaCSiwtzHS5",
              "consent_no_show__id": "lkxHxfXjztSHLhlb1qZj",
              "consent_sms_id": "Wgb1f4NBphqE6xzQAW8l",
              "ar_booking_url_id": "RCsUvRXmAJB12ITaLSuy",
              "next_due_tox_date_id": "7v37dWqNlcWgx6L03LMb",
              "utm_source_id": "crmq1wjfyEqjH6VuTiNo",
              "utm_medium_id": "fHw1ROiBCu4WQurhXVvB",
              "utm_campaign_id": "7gkiyGne2Wnm12H9Ddwp",
              "utm_content_id": "HHMscUCa1DJ10I1pVBg4",
              "fbclid_id": "WPvagbhdZFNVGbu9ZqHC",
              "landing_page_id": "8BVAs1dWjvglral8jg7Y",
              "tc_id": "2KMCEectQJl1tjJWiC0G",
              "ai_call_recording_id": "1JeGT4tJZrTWQzvKE7fk",
              "ai_call_recording": "https://dxc03zgurdly9.cloudfront.net/126b8109bc92d79638d9f033e4d074ffb0b14b70a484536d5f3e497529129511/recording.wav",
              "how_was_your_mindset_how_did_you_feel_during_the_call_id": "lUDLSo3f7Jaj9cscXKa0",
              "how_long_was_the_call_id": "8Oq3SBOceNQukiMbXjvR",
              "appointment_status_id": "9bhJ9AZkX69IEv8RLidl",
              "ai_call_type_id": "GN5chYJSeoDah5y9L0jX",
              "ai_call_type": "outbound",
              "event_id_id": "5KWNCereSYBK8va7UOXU",
              "objections_concerns_id": "xA56LabVBlolstrty5O0",
              "lead_disposition_id": "ODZtLNlLrf2gwKr2XTVp",
              "follow_up_date_scheduled_id": "ukfG5oFRHB2I4nIpOeiP",
              "conversation_id_id": "C9zQX5qzSvQiFkmeUlph",
              "reactivate_in_90_days_id": "oaNAbB0YilTvFZJ6dYaY",
              "ai_call_count_id": "TiTpLxEBKT01hXXf020m",
              "ai_call_count": "8",
              "total_payment_agreement_id": "esK5onZja74kSDwdntCb",
              "initial_payment_amount_id": "emFY39KpEiK1OAYTTAL0",
              "ai_call_summary_id": "pueNNVGgMZi1JnzN8IAu",
              "ai_call_summary": "Agent called Roberto but reached his voicemail box instead of speaking with him directly.",
              "ai_call_detected_id": "B4BljXj9QUQ3kHTL4GhR",
              "ai_call_detected": "true",
              "add_to_reschedule_workflow_id": "oLtsyZOJg8A6kPiHYCCc",
              "how_was_your_mindset_how_did_you_feel_before_the_call_id": "UoTlaoOb84QMcp3YF73v",
              "response_channel_id": "kHhbyNlg8UZFckHaGzpn",
              "appointment_datetime_id": "E0V8BlWU2S4MXSHiJxPl",
              "ai_call_duration_id": "tSLvvmE4fH03aC9K84Xv",
              "ai_call_duration": "8",
              "response_channel_smswhatsapp_id": "qumgi72gbQocSAGDAvnF",
              "ai_call_ended_reason_id": "N5By3ZtP0bvSnvlzNuHp",
              "ai_call_ended_reason": "voicemail_reached",
              "ai_call_contact_name_id": "oV724GFE0yJl90StqhxG",
              "ai_call_contact_name": "Roberto",
              "ai_call_outcome_id": "2g7iWrr2DqIp75Hq5m6K",
              "ai_call_outcome": "no_answer",
              "ai_call_outcome_reason_id": "EB86PUKm25YhyjSUuBGg",
              "ai_call_outcome_reason": "Call was answered by voicemail system rather than the intended recipient Roberto",
              "monthly_payment_amount_id": "CPDM8ZM2VyZd2sQ5EW35",
              "appointment_notes_not_sent_to_client_id": "EkH2Rd4OUfzN4aXnUdmL",
              "ai_call_improvement_id": "gyiTZIbOE89UUyLpcj3T",
              "ai_call_timestamp_id": "MBcFVRc4C4iEv7q3hbgx",
              "ai_call_timestamp": "1759185570739",
              "ai_call_follow_up_datetime_id": "nQu2G4FM6PoFig5W6KTk",
              "requests_id": "zDMlS9Bt8uC4PLD0hbpI",
              "appointment_recap_sent_to_client_id": "4lUfSQeIWEPN5ywMRmkd",
              "ai_call_contact_phone_id": "wxwmaZ1C17bL3qCN5L7N",
              "appointment_reschedule_link_id": "mUTeSKqhkVudUXuweMZr",
              "name_of_business_id": "5DoyaF3kD47Zfnl1gnne",
              "did_you_research_the_client_before_the_call_id": "rYkwA4LSU0yX0m8nqC9J",
              "if_you_didnt_close_why_not_id": "K8c9pG5dS4ePwsHNs50q",
              "ai_call_contact_email_id": "L3hh54MRanPpQ2JwT7Ct",
              "twilio_phone_number_id": "inzBpD4dPobdgnZzWLaJ",
              "twilio_phone_number": "+18555788510",
              "ai_call_transcript_id": "BwbIejICutG0XYiqDN52",
              "ai_call_transcript": "Agent: Hi, \nUser: Hello?\nAgent: is this Roberto?\nAgent: Hey Roberto, \nUser: Yes. This is the voice mail box.\n",
              "text_ai_status_id": "Boyqa0z65yuyZj7JalR2",
              "ai_call_appointment_datetime_id": "gSznRDsYIBUJqvuARyNH",
              "send_recap_to_client_id": "gde1z6K76Ty8NDP2CyaW",
              "ai_call_improvement_reason_id": "TbgODkrxTL6QfYHLy2lz",
              "instagram_handle_id": "H28UJUYC7cPI9lul5a1G",
              "are_you_available_on_92325_for_the_content_day_id": "fm4mAn86hwbrek635PoC",
              "portfolio_optional__id": "shxD0s3Y4q2EAD5IA8um",
              "preferred_treatment_id": "Orc5PQ5rrbTLnKrzY1zj",
              "have_you_visited_lyf_before__id": "pfRDGSCeeKiEXexJhDgT",
              "best_way_to_reach_you_id": "apZFJ3pRshrq63DHd0u6",
              "preferred_appointment_date_id": "VjD3qbE3B5NJw8BN3D6Z",
              "any_additional_comments_questions_or_special_requests_id": "kNUMcvq76MlXVy6dOWdl",
              "preferred_service_select_the_service_youd_like_to_book_id": "CR18TAOXqXRfTdXFaXdU",
              "_which_location_are_you_interested_in_visiting_id": "aRn7VnGIokQ1khRYkA7W",
              "which_services_are_you_interested_in_id": "ENCquvPnZMjEDNuQkWyD",
              "_which_location_would_you_like_to_visit_id": "QpR37R2cU4XWNPCeUgmN",
              "ai_user_phone_id": "fssAhD9hnnoSnvWr3TJx",
              "calendar_map": "{\"Customer Success Calendar\":\"0fmofabllsoX1DbCSKXL\",\"customer_success_calendar\":\"0fmofabllsoX1DbCSKXL\",\"Rochelle Cassia's Personal Calendar\":\"1LUpVRAw7xKZddhE1Q7D\",\"rochelle_cassias_personal_calendar\":\"1LUpVRAw7xKZddhE1Q7D\",\"Tea & Tox Pop-Up \":\"27jkiMkewerzCZuTwgjv\",\"tea_tox_popup_\":\"27jkiMkewerzCZuTwgjv\",\"Nicole Pareja's Personal Calendar\":\"6cSFMG5h44q7vAp0VPi3\",\"nicole_parejas_personal_calendar\":\"6cSFMG5h44q7vAp0VPi3\",\"Onboarding Calendar\":\"9DUO6dM2gUOytaFtyBis\",\"onboarding_calendar\":\"9DUO6dM2gUOytaFtyBis\",\"Stephanie Lara\":\"wtUty3vPzMraRwKu6YiW\",\"stephanie_lara\":\"wtUty3vPzMraRwKu6YiW\",\"Rochelle Cassia\":\"CP2mGGtHp9NzOFaJ59P9\",\"rochelle_cassia\":\"CP2mGGtHp9NzOFaJ59P9\",\"Patricia Chiong\":\"ExwT9fIBCDvYvmKvHSxp\",\"patricia_chiong\":\"ExwT9fIBCDvYvmKvHSxp\",\"Gus ~Miami-G's Personal Calendar\":\"I842uTpnlKoY45n8Ug5G\",\"gus_miamigs_personal_calendar\":\"I842uTpnlKoY45n8Ug5G\",\"Danika Miroshnichenko's Personal Calendar\":\"KHjYpnhhwwtRUPpG5nyq\",\"danika_miroshnichenkos_personal_calendar\":\"KHjYpnhhwwtRUPpG5nyq\",\"Nicole Pareja\":\"KrIZXz5rxZKyNFdulFku\",\"nicole_pareja\":\"KrIZXz5rxZKyNFdulFku\",\"Booking Request\":\"MaGhKn3P8AlqRFjXAEcQ\",\"booking_request\":\"MaGhKn3P8AlqRFjXAEcQ\",\"Wrinkle Relax Phone Consultation\":\"PT34AelaWCxtnk3K9rWd\",\"wrinkle_relax_phone_consultation\":\"PT34AelaWCxtnk3K9rWd\",\"Glo, Tox & Tea Booking\":\"QBsRoDEq3SuY8LrovZcL\",\"glo_tox_tea_booking\":\"QBsRoDEq3SuY8LrovZcL\",\"Athalia Jiron\":\"QKboJdcN4z2fkbVHToBk\",\"athalia_jiron\":\"QKboJdcN4z2fkbVHToBk\",\"Jessie Cabrer\":\"QWR96dUWabZblOTmxUzm\",\"jessie_cabrer\":\"QWR96dUWabZblOTmxUzm\",\"Sales Calendar\":\"TDB7L2p2dATmPLle0jCv\",\"sales_calendar\":\"TDB7L2p2dATmPLle0jCv\",\"Mohammad Arham's Personal Calendar\":\"XOs38gFEHuBmMTzJ4zJY\",\"mohammad_arhams_personal_calendar\":\"XOs38gFEHuBmMTzJ4zJY\",\"Wellness Program\":\"gNTGHvlH7LQXgmtvPvSD\",\"wellness_program\":\"gNTGHvlH7LQXgmtvPvSD\",\"Kat Mederos's Personal Calendar\":\"hAquxcEYyKYneULrZU9v\",\"kat_medeross_personal_calendar\":\"hAquxcEYyKYneULrZU9v\",\"Nauel Palis's Personal Calendar\":\"pa7Islx4DHfT1ZOfQVCi\",\"nauel_paliss_personal_calendar\":\"pa7Islx4DHfT1ZOfQVCi\",\"Melanie Sierra\":\"sioMhYPCuiMLbM0lXVuw\",\"melanie_sierra\":\"sioMhYPCuiMLbM0lXVuw\",\"Free Gift Card & Consult Claim\":\"v9KJOHpz5n1CQpjXt3hU\",\"free_gift_card_consult_claim\":\"v9KJOHpz5n1CQpjXt3hU\",\"Danika Miroshnichenko\":\"wHqMzEr6SiCF72N1htoJ\",\"danika_miroshnichenko\":\"wHqMzEr6SiCF72N1htoJ\",\"Ayaan Ansari's Personal Calendar\":\"xv2F6lW9fLP1QBVCZR1t\",\"ayaan_ansaris_personal_calendar\":\"xv2F6lW9fLP1QBVCZR1t\"}"
            },
            "call_status": "ongoing",
            "start_timestamp": 1759360976218,
            "transcript": "Agent: Hi, is this {{first_name}}?\nUser: Hello?\nAgent: Hey {{first_name}}, it's Sophia from Life Esthetics.\n\nHow's everything going?\nUser: Good. How's it going?\nAgent: I'm doing well, thanks for asking!\n\nSo I see you registered with us a while back. What got you interested in Life Esthetics in the first place?\nUser: I was interested in Botox.\nAgent: Got it, that makes sense—Botox is super popular for a reason!Was there something specific you wanted to treat, or just curious about how it could help?\nUser: Just curious to how it works.\nAgent: Totally understandable—a lot of people are curious before they try it.Was there anything in particular that kept you from coming in, or were you just still thinking it over?\nUser: Um, just didn't match with my schedule at the moment. I was pretty busy with work.\nAgent: I hear you—life gets hectic, and it’s easy to put things like this on the back burner.\n\nActually, the timing might be perfect because we have something special going on right now.\n\nWe're offering registered first-timers like you a pretty significant deal on Botox.\nUser: Cool.\nUser: What is tell me more about it.\nAgent: Absolutely! Here’s how it works:\n\nYou pick two areas you want to treat. The first area? Completely free. The second area? You pay $250. That’s it—$250 total instead of the usual $500.\n\nSo you’re basically getting both areas for the price of one.\n\nDoes that make sense?\nUser: Yeah. That makes sense.\nAgent: Perfect! The three most popular areas we treat are forehead lines, crow’s feet around the eyes, and the 11’s—that’s the frown lines between your eyebrows. We call them the 11’s because they look like the number eleven.\n\nWhich two areas would you say bother you most?\nUser: I would say forehead and glabellar.\nAgent: Great choices—those are super common! The forehead lines and the glabellar area (the 11’s) really make a difference when they’re smoothed out.\n\nWhat does your schedule usually look like—are mornings or afternoons better for you?\nUser: Morning.\nAgent: Got it, mornings work best for you. And is there a particular day that’s usually easier, or are you pretty flexible?\nUser: I'm pretty flexible.\n",
            "transcript_object": [
              {
                "role": "agent",
                "content": "Hi, is this {{first_name}}?",
                "words": [
                  {
                    "word": "Hi, ",
                    "start": 2.135,
                    "end": 2.321
                  },
                  {
                    "word": "is ",
                    "start": 2.321,
                    "end": 2.425
                  },
                  {
                    "word": "this ",
                    "start": 2.425,
                    "end": 2.588
                  },
                  {
                    "word": "{{first_name}}?",
                    "start": 2.588,
                    "end": 2.948
                  }
                ],
                "metadata": {
                  "response_id": 0
                }
              },
              {
                "role": "user",
                "content": "Hello?",
                "words": [
                  {
                    "word": "Hello?",
                    "start": 5.776,
                    "end": 6.096
                  }
                ]
              },
              {
                "role": "agent",
                "content": "Hey {{first_name}}, it's Sophia from Life Esthetics.\n\nHow's everything going?",
                "words": [
                  {
                    "word": "Hey ",
                    "start": 7.6,
                    "end": 7.867
                  },
                  {
                    "word": "{{first_name}}, ",
                    "start": 7.867,
                    "end": 8.297
                  },
                  {
                    "word": "it's ",
                    "start": 8.297,
                    "end": 8.807
                  },
                  {
                    "word": "Sophia ",
                    "start": 8.807,
                    "end": 9.597
                  },
                  {
                    "word": "from ",
                    "start": 9.597,
                    "end": 9.736
                  },
                  {
                    "word": "Life ",
                    "start": 9.736,
                    "end": 10.108
                  },
                  {
                    "word": "Esthetics.\n",
                    "start": 10.108,
                    "end": 10.282
                  },
                  {
                    "word": "\n",
                    "start": 10.282,
                    "end": 10.479
                  },
                  {
                    "word": "How's ",
                    "start": 11.303083251953124,
                    "end": 11.512083251953126
                  },
                  {
                    "word": "everything ",
                    "start": 11.512083251953126,
                    "end": 11.872083251953125
                  },
                  {
                    "word": "going?",
                    "start": 11.872083251953125,
                    "end": 12.418083251953124
                  }
                ],
                "metadata": {
                  "response_id": 1
                }
              },
              {
                "role": "user",
                "content": "Good. How's it going?",
                "words": [
                  {
                    "word": "Good. ",
                    "start": 13.565999,
                    "end": 13.886
                  },
                  {
                    "word": "How's ",
                    "start": 13.886,
                    "end": 14.126
                  },
                  {
                    "word": "it ",
                    "start": 14.126,
                    "end": 14.206
                  },
                  {
                    "word": "going?",
                    "start": 14.206,
                    "end": 14.365998999999999
                  }
                ]
              },
              {
                "role": "agent",
                "content": "I'm doing well, thanks for asking!\n\nSo I see you registered with us a while back. What got you interested in Life Esthetics in the first place?",
                "words": [
                  {
                    "word": "I'm ",
                    "start": 15.76,
                    "end": 15.981
                  },
                  {
                    "word": "doing ",
                    "start": 15.981,
                    "end": 16.19
                  },
                  {
                    "word": "well, ",
                    "start": 16.19,
                    "end": 16.387
                  },
                  {
                    "word": "thanks ",
                    "start": 16.387,
                    "end": 16.631
                  },
                  {
                    "word": "for ",
                    "start": 16.631,
                    "end": 16.77
                  },
                  {
                    "word": "asking!",
                    "start": 16.77,
                    "end": 17.362
                  },
                  {
                    "word": "\n\nSo ",
                    "start": 17.408291748046874,
                    "end": 17.536291748046875
                  },
                  {
                    "word": "I ",
                    "start": 17.536291748046875,
                    "end": 17.606291748046875
                  },
                  {
                    "word": "see ",
                    "start": 17.606291748046875,
                    "end": 17.734291748046875
                  },
                  {
                    "word": "you ",
                    "start": 17.734291748046875,
                    "end": 17.861291748046874
                  },
                  {
                    "word": "registered ",
                    "start": 17.861291748046874,
                    "end": 18.268291748046874
                  },
                  {
                    "word": "with ",
                    "start": 18.268291748046874,
                    "end": 18.465291748046877
                  },
                  {
                    "word": "us ",
                    "start": 18.465291748046877,
                    "end": 18.639291748046876
                  },
                  {
                    "word": "a ",
                    "start": 18.639291748046876,
                    "end": 18.720291748046876
                  },
                  {
                    "word": "while ",
                    "start": 18.720291748046876,
                    "end": 18.999291748046875
                  },
                  {
                    "word": "back.",
                    "start": 18.999291748046875,
                    "end": 19.545291748046875
                  },
                  {
                    "word": " What ",
                    "start": 19.567958251953126,
                    "end": 19.857958251953125
                  },
                  {
                    "word": "got ",
                    "start": 19.857958251953125,
                    "end": 20.055958251953125
                  },
                  {
                    "word": "you ",
                    "start": 20.055958251953125,
                    "end": 20.194958251953125
                  },
                  {
                    "word": "interested ",
                    "start": 20.194958251953125,
                    "end": 20.751958251953123
                  },
                  {
                    "word": "in ",
                    "start": 20.751958251953123,
                    "end": 20.879958251953123
                  },
                  {
                    "word": "Life ",
                    "start": 20.879958251953123,
                    "end": 21.100958251953124
                  },
                  {
                    "word": "Esthetics ",
                    "start": 21.100958251953124,
                    "end": 21.587958251953125
                  },
                  {
                    "word": "in ",
                    "start": 21.587958251953125,
                    "end": 21.692958251953126
                  },
                  {
                    "word": "the ",
                    "start": 21.692958251953126,
                    "end": 21.796958251953125
                  },
                  {
                    "word": "first ",
                    "start": 21.796958251953125,
                    "end": 22.052958251953125
                  },
                  {
                    "word": "place?",
                    "start": 22.052958251953125,
                    "end": 22.655958251953123
                  }
                ],
                "metadata": {
                  "response_id": 2
                }
              },
              {
                "role": "user",
                "content": "I was interested in Botox.",
                "words": [
                  {
                    "word": "I ",
                    "start": 24.776001,
                    "end": 25.016001
                  },
                  {
                    "word": "was ",
                    "start": 25.016001,
                    "end": 25.336000000000002
                  },
                  {
                    "word": "interested ",
                    "start": 25.336000000000002,
                    "end": 25.816000000000003
                  },
                  {
                    "word": "in ",
                    "start": 25.816000000000003,
                    "end": 26.216
                  },
                  {
                    "word": "Botox.",
                    "start": 26.216,
                    "end": 26.696
                  }
                ]
              },
              {
                "role": "agent",
                "content": "Got it, that makes sense—Botox is super popular for a reason!Was there something specific you wanted to treat, or just curious about how it could help?",
                "words": [
                  {
                    "word": "Got ",
                    "start": 28.44,
                    "end": 28.649
                  },
                  {
                    "word": "it, ",
                    "start": 28.649,
                    "end": 28.765
                  },
                  {
                    "word": "that ",
                    "start": 28.765,
                    "end": 28.904
                  },
                  {
                    "word": "makes ",
                    "start": 28.904,
                    "end": 29.101
                  },
                  {
                    "word": "sense—Botox ",
                    "start": 29.101,
                    "end": 29.984
                  },
                  {
                    "word": "is ",
                    "start": 29.984,
                    "end": 30.088
                  },
                  {
                    "word": "super ",
                    "start": 30.088,
                    "end": 30.379
                  },
                  {
                    "word": "popular ",
                    "start": 30.379,
                    "end": 30.808
                  },
                  {
                    "word": "for ",
                    "start": 30.808,
                    "end": 30.971
                  },
                  {
                    "word": "a ",
                    "start": 30.971,
                    "end": 31.052
                  },
                  {
                    "word": "reason!",
                    "start": 31.052,
                    "end": 31.702
                  },
                  {
                    "word": "Was ",
                    "start": 31.748125,
                    "end": 32.004125
                  },
                  {
                    "word": "there ",
                    "start": 32.004125,
                    "end": 32.224125
                  },
                  {
                    "word": "something ",
                    "start": 32.224125,
                    "end": 32.619125
                  },
                  {
                    "word": "specific ",
                    "start": 32.619125,
                    "end": 33.118125
                  },
                  {
                    "word": "you ",
                    "start": 33.118125,
                    "end": 33.235125
                  },
                  {
                    "word": "wanted ",
                    "start": 33.235125,
                    "end": 33.478125
                  },
                  {
                    "word": "to ",
                    "start": 33.478125,
                    "end": 33.571125
                  },
                  {
                    "word": "treat, ",
                    "start": 33.571125,
                    "end": 33.850125
                  },
                  {
                    "word": "or ",
                    "start": 33.850125,
                    "end": 34.047125
                  },
                  {
                    "word": "just ",
                    "start": 34.047125,
                    "end": 34.291125
                  },
                  {
                    "word": "curious ",
                    "start": 34.291125,
                    "end": 34.872125
                  },
                  {
                    "word": "about ",
                    "start": 34.872125,
                    "end": 35.150125
                  },
                  {
                    "word": "how ",
                    "start": 35.150125,
                    "end": 35.348125
                  },
                  {
                    "word": "it ",
                    "start": 35.348125,
                    "end": 35.417125
                  },
                  {
                    "word": "could ",
                    "start": 35.417125,
                    "end": 35.580125
                  },
                  {
                    "word": "help?",
                    "start": 35.580125,
                    "end": 35.974125
                  }
                ],
                "metadata": {
                  "response_id": 4
                }
              },
              {
                "role": "user",
                "content": "Just curious to how it works.",
                "words": [
                  {
                    "word": "Just ",
                    "start": 37.045998,
                    "end": 37.285999999999994
                  },
                  {
                    "word": "curious ",
                    "start": 37.285999999999994,
                    "end": 37.685997
                  },
                  {
                    "word": "to ",
                    "start": 37.685997,
                    "end": 37.845997
                  },
                  {
                    "word": "how ",
                    "start": 37.845997,
                    "end": 37.925999999999995
                  },
                  {
                    "word": "it ",
                    "start": 37.925999999999995,
                    "end": 38.086
                  },
                  {
                    "word": "works.",
                    "start": 38.086,
                    "end": 38.166
                  }
                ]
              },
              {
                "role": "agent",
                "content": "Totally understandable—a lot of people are curious before they try it.Was there anything in particular that kept you from coming in, or were you just still thinking it over?",
                "words": [
                  {
                    "word": "Totally ",
                    "start": 39.699,
                    "end": 40.105
                  },
                  {
                    "word": "understandable—a ",
                    "start": 40.105,
                    "end": 40.837
                  },
                  {
                    "word": "lot ",
                    "start": 40.837,
                    "end": 40.988
                  },
                  {
                    "word": "of ",
                    "start": 40.988,
                    "end": 41.058
                  },
                  {
                    "word": "people ",
                    "start": 41.058,
                    "end": 41.301
                  },
                  {
                    "word": "are ",
                    "start": 41.301,
                    "end": 41.441
                  },
                  {
                    "word": "curious ",
                    "start": 41.441,
                    "end": 41.835
                  },
                  {
                    "word": "before ",
                    "start": 41.835,
                    "end": 42.114
                  },
                  {
                    "word": "they ",
                    "start": 42.114,
                    "end": 42.253
                  },
                  {
                    "word": "try ",
                    "start": 42.253,
                    "end": 42.532
                  },
                  {
                    "word": "it.",
                    "start": 42.532,
                    "end": 42.915
                  },
                  {
                    "word": "Was ",
                    "start": 42.938125,
                    "end": 43.194125
                  },
                  {
                    "word": "there ",
                    "start": 43.194125,
                    "end": 43.449125
                  },
                  {
                    "word": "anything ",
                    "start": 43.449125,
                    "end": 43.925125
                  },
                  {
                    "word": "in ",
                    "start": 43.925125,
                    "end": 44.064125
                  },
                  {
                    "word": "particular ",
                    "start": 44.064125,
                    "end": 44.610125
                  },
                  {
                    "word": "that ",
                    "start": 44.610125,
                    "end": 44.761125
                  },
                  {
                    "word": "kept ",
                    "start": 44.761125,
                    "end": 45.005125
                  },
                  {
                    "word": "you ",
                    "start": 45.005125,
                    "end": 45.121125
                  },
                  {
                    "word": "from ",
                    "start": 45.121125,
                    "end": 45.318125
                  },
                  {
                    "word": "coming ",
                    "start": 45.318125,
                    "end": 45.632125
                  },
                  {
                    "word": "in, ",
                    "start": 45.632125,
                    "end": 45.806125
                  },
                  {
                    "word": "or ",
                    "start": 45.806125,
                    "end": 45.945125
                  },
                  {
                    "word": "were ",
                    "start": 45.945125,
                    "end": 46.085125
                  },
                  {
                    "word": "you ",
                    "start": 46.085125,
                    "end": 46.212125
                  },
                  {
                    "word": "just ",
                    "start": 46.212125,
                    "end": 46.386125
                  },
                  {
                    "word": "still ",
                    "start": 46.386125,
                    "end": 46.653125
                  },
                  {
                    "word": "thinking ",
                    "start": 46.653125,
                    "end": 47.060125
                  },
                  {
                    "word": "it ",
                    "start": 47.060125,
                    "end": 47.176125
                  },
                  {
                    "word": "over?",
                    "start": 47.176125,
                    "end": 47.745125
                  }
                ],
                "metadata": {
                  "response_id": 6
                }
              },
              {
                "role": "user",
                "content": "Um, just didn't match with my schedule at the moment. I was pretty busy with work.",
                "words": [
                  {
                    "word": "Um, ",
                    "start": 49.086,
                    "end": 49.166
                  },
                  {
                    "word": "just ",
                    "start": 49.166,
                    "end": 49.406
                  },
                  {
                    "word": "didn't ",
                    "start": 49.406,
                    "end": 49.806
                  },
                  {
                    "word": "match ",
                    "start": 49.806,
                    "end": 50.046
                  },
                  {
                    "word": "with ",
                    "start": 50.046,
                    "end": 50.205999999999996
                  },
                  {
                    "word": "my ",
                    "start": 50.205999999999996,
                    "end": 50.366
                  },
                  {
                    "word": "schedule ",
                    "start": 50.366,
                    "end": 50.605999999999995
                  },
                  {
                    "word": "at ",
                    "start": 50.605999999999995,
                    "end": 50.846
                  },
                  {
                    "word": "the ",
                    "start": 50.846,
                    "end": 50.925999999999995
                  },
                  {
                    "word": "moment. ",
                    "start": 50.925999999999995,
                    "end": 51.166
                  },
                  {
                    "word": "I ",
                    "start": 51.166,
                    "end": 51.326
                  },
                  {
                    "word": "was ",
                    "start": 51.326,
                    "end": 51.486
                  },
                  {
                    "word": "pretty ",
                    "start": 51.486,
                    "end": 51.646
                  },
                  {
                    "word": "busy ",
                    "start": 51.646,
                    "end": 51.885999999999996
                  },
                  {
                    "word": "with ",
                    "start": 51.885999999999996,
                    "end": 52.046
                  },
                  {
                    "word": "work.",
                    "start": 52.046,
                    "end": 52.205999999999996
                  }
                ]
              },
              {
                "role": "agent",
                "content": "I hear you—life gets hectic, and it’s easy to put things like this on the back burner.\n\nActually, the timing might be perfect because we have something special going on right now.\n\nWe're offering registered first-timers like you a pretty significant deal on Botox.",
                "words": [
                  {
                    "word": "I ",
                    "start": 54.069,
                    "end": 54.313
                  },
                  {
                    "word": "hear ",
                    "start": 54.313,
                    "end": 54.58
                  },
                  {
                    "word": "you—life ",
                    "start": 54.58,
                    "end": 55.381
                  },
                  {
                    "word": "gets ",
                    "start": 55.381,
                    "end": 55.648
                  },
                  {
                    "word": "hectic, ",
                    "start": 55.648,
                    "end": 56.078
                  },
                  {
                    "word": "and ",
                    "start": 56.078,
                    "end": 56.217
                  },
                  {
                    "word": "it’s ",
                    "start": 56.217,
                    "end": 56.391
                  },
                  {
                    "word": "easy ",
                    "start": 56.391,
                    "end": 56.681
                  },
                  {
                    "word": "to ",
                    "start": 56.681,
                    "end": 56.797
                  },
                  {
                    "word": "put ",
                    "start": 56.797,
                    "end": 56.983
                  },
                  {
                    "word": "things ",
                    "start": 56.983,
                    "end": 57.25
                  },
                  {
                    "word": "like ",
                    "start": 57.25,
                    "end": 57.424
                  },
                  {
                    "word": "this ",
                    "start": 57.424,
                    "end": 57.645
                  },
                  {
                    "word": "on ",
                    "start": 57.645,
                    "end": 57.796
                  },
                  {
                    "word": "the ",
                    "start": 57.796,
                    "end": 57.912
                  },
                  {
                    "word": "back ",
                    "start": 57.912,
                    "end": 58.202
                  },
                  {
                    "word": "burner.",
                    "start": 58.202,
                    "end": 58.818
                  },
                  {
                    "word": "\n\nActually, ",
                    "start": 58.863625,
                    "end": 59.363625
                  },
                  {
                    "word": "the ",
                    "start": 59.363625,
                    "end": 59.514625
                  },
                  {
                    "word": "timing ",
                    "start": 59.514625,
                    "end": 59.885625
                  },
                  {
                    "word": "might ",
                    "start": 59.885625,
                    "end": 60.082625
                  },
                  {
                    "word": "be ",
                    "start": 60.082625,
                    "end": 60.222625
                  },
                  {
                    "word": "perfect ",
                    "start": 60.222625,
                    "end": 60.628625
                  },
                  {
                    "word": "because ",
                    "start": 60.628625,
                    "end": 60.907625
                  },
                  {
                    "word": "we ",
                    "start": 60.907625,
                    "end": 61.011625
                  },
                  {
                    "word": "have ",
                    "start": 61.011625,
                    "end": 61.151625
                  },
                  {
                    "word": "something ",
                    "start": 61.151625,
                    "end": 61.511625
                  },
                  {
                    "word": "special ",
                    "start": 61.511625,
                    "end": 61.928625
                  },
                  {
                    "word": "going ",
                    "start": 61.928625,
                    "end": 62.207625
                  },
                  {
                    "word": "on ",
                    "start": 62.207625,
                    "end": 62.346625
                  },
                  {
                    "word": "right ",
                    "start": 62.346625,
                    "end": 62.544625
                  },
                  {
                    "word": "now.",
                    "start": 62.544625,
                    "end": 63.043625
                  },
                  {
                    "word": "\n\nWe're ",
                    "start": 63.089666748046874,
                    "end": 63.25266674804688
                  },
                  {
                    "word": "offering ",
                    "start": 63.25266674804688,
                    "end": 63.57766674804687
                  },
                  {
                    "word": "registered ",
                    "start": 63.57766674804687,
                    "end": 64.19266674804688
                  },
                  {
                    "word": "first-timers ",
                    "start": 64.19266674804688,
                    "end": 64.81966674804687
                  },
                  {
                    "word": "like ",
                    "start": 64.81966674804687,
                    "end": 65.01766674804688
                  },
                  {
                    "word": "you ",
                    "start": 65.01766674804688,
                    "end": 65.21466674804688
                  },
                  {
                    "word": "a ",
                    "start": 65.21466674804688,
                    "end": 65.29566674804687
                  },
                  {
                    "word": "pretty ",
                    "start": 65.29566674804687,
                    "end": 65.57466674804688
                  },
                  {
                    "word": "significant ",
                    "start": 65.57466674804688,
                    "end": 66.12066674804687
                  },
                  {
                    "word": "deal ",
                    "start": 66.12066674804687,
                    "end": 66.36366674804688
                  },
                  {
                    "word": "on ",
                    "start": 66.36366674804688,
                    "end": 66.50366674804687
                  },
                  {
                    "word": "Botox.",
                    "start": 66.50366674804687,
                    "end": 67.22366674804688
                  }
                ],
                "metadata": {
                  "response_id": 9
                }
              },
              {
                "role": "user",
                "content": "Cool.",
                "words": [
                  {
                    "word": "Cool.",
                    "start": 70.476,
                    "end": 70.715996
                  }
                ]
              },
              {
                "role": "user",
                "content": "What is tell me more about it.",
                "words": [
                  {
                    "word": "What ",
                    "start": 71.926,
                    "end": 72.08601
                  },
                  {
                    "word": "is ",
                    "start": 72.08601,
                    "end": 72.246
                  },
                  {
                    "word": "tell ",
                    "start": 72.326004,
                    "end": 72.566
                  },
                  {
                    "word": "me ",
                    "start": 72.566,
                    "end": 72.64600399999999
                  },
                  {
                    "word": "more ",
                    "start": 72.64600399999999,
                    "end": 72.806
                  },
                  {
                    "word": "about ",
                    "start": 72.806,
                    "end": 72.966
                  },
                  {
                    "word": "it.",
                    "start": 72.966,
                    "end": 73.046005
                  }
                ]
              },
              {
                "role": "agent",
                "content": "Absolutely! Here’s how it works:\n\nYou pick two areas you want to treat. The first area? Completely free. The second area? You pay $250. That’s it—$250 total instead of the usual $500.\n\nSo you’re basically getting both areas for the price of one.\n\nDoes that make sense?",
                "words": [
                  {
                    "word": "Absolutely!",
                    "start": 74.314,
                    "end": 75.266
                  },
                  {
                    "word": " Here’s ",
                    "start": 75.312125,
                    "end": 75.568125
                  },
                  {
                    "word": "how ",
                    "start": 75.568125,
                    "end": 75.707125
                  },
                  {
                    "word": "it ",
                    "start": 75.707125,
                    "end": 75.800125
                  },
                  {
                    "word": "works:\n",
                    "start": 75.800125,
                    "end": 76.125125
                  },
                  {
                    "word": "\nYou ",
                    "start": 76.125125,
                    "end": 76.299125
                  },
                  {
                    "word": "pick ",
                    "start": 76.299125,
                    "end": 76.485125
                  },
                  {
                    "word": "two ",
                    "start": 76.485125,
                    "end": 76.682125
                  },
                  {
                    "word": "areas ",
                    "start": 76.682125,
                    "end": 77.042125
                  },
                  {
                    "word": "you ",
                    "start": 77.042125,
                    "end": 77.182125
                  },
                  {
                    "word": "want ",
                    "start": 77.182125,
                    "end": 77.333125
                  },
                  {
                    "word": "to ",
                    "start": 77.333125,
                    "end": 77.414125
                  },
                  {
                    "word": "treat.",
                    "start": 77.414125,
                    "end": 77.913125
                  },
                  {
                    "word": " The ",
                    "start": 77.92520825195312,
                    "end": 78.08720825195313
                  },
                  {
                    "word": "first ",
                    "start": 78.08720825195313,
                    "end": 78.36620825195313
                  },
                  {
                    "word": "area?",
                    "start": 78.36620825195313,
                    "end": 79.02820825195313
                  },
                  {
                    "word": " Completely ",
                    "start": 79.07379174804687,
                    "end": 79.48079174804687
                  },
                  {
                    "word": "free.",
                    "start": 79.48079174804687,
                    "end": 80.09579174804688
                  },
                  {
                    "word": " The ",
                    "start": 80.14191674804688,
                    "end": 80.29291674804688
                  },
                  {
                    "word": "second ",
                    "start": 80.29291674804688,
                    "end": 80.58391674804687
                  },
                  {
                    "word": "area?",
                    "start": 80.58391674804687,
                    "end": 81.07091674804687
                  },
                  {
                    "word": " You ",
                    "start": 81.10616674804687,
                    "end": 81.31516674804688
                  },
                  {
                    "word": "pay ",
                    "start": 81.31516674804688,
                    "end": 81.50116674804687
                  },
                  {
                    "word": "$250. ",
                    "start": 81.50116674804687,
                    "end": 81.64016674804688
                  },
                  {
                    "word": "That’s ",
                    "start": 83.02120825195313,
                    "end": 83.28820825195312
                  },
                  {
                    "word": "it—$250 ",
                    "start": 83.28820825195312,
                    "end": 83.43920825195312
                  },
                  {
                    "word": "total ",
                    "start": 83.43920825195312,
                    "end": 83.95020825195313
                  },
                  {
                    "word": "instead ",
                    "start": 83.95020825195313,
                    "end": 84.15920825195313
                  },
                  {
                    "word": "of ",
                    "start": 84.15920825195313,
                    "end": 84.26420825195312
                  },
                  {
                    "word": "the ",
                    "start": 84.26420825195312,
                    "end": 84.51920825195313
                  },
                  {
                    "word": "usual ",
                    "start": 84.51920825195313,
                    "end": 84.91420825195313
                  },
                  {
                    "word": "$500.",
                    "start": 84.91420825195313,
                    "end": 85.33220825195312
                  },
                  {
                    "word": "\n\nSo ",
                    "start": 87.44545825195313,
                    "end": 87.60745825195312
                  },
                  {
                    "word": "you’re ",
                    "start": 87.60745825195312,
                    "end": 87.77045825195313
                  },
                  {
                    "word": "basically ",
                    "start": 87.77045825195313,
                    "end": 88.09545825195312
                  },
                  {
                    "word": "getting ",
                    "start": 88.09545825195312,
                    "end": 88.36245825195313
                  },
                  {
                    "word": "both ",
                    "start": 88.36245825195313,
                    "end": 88.61745825195312
                  },
                  {
                    "word": "areas ",
                    "start": 88.61745825195312,
                    "end": 89.00045825195312
                  },
                  {
                    "word": "for ",
                    "start": 89.00045825195312,
                    "end": 89.12845825195312
                  },
                  {
                    "word": "the ",
                    "start": 89.12845825195312,
                    "end": 89.22145825195312
                  },
                  {
                    "word": "price ",
                    "start": 89.22145825195312,
                    "end": 89.47645825195312
                  },
                  {
                    "word": "of ",
                    "start": 89.47645825195312,
                    "end": 89.61645825195312
                  },
                  {
                    "word": "one.",
                    "start": 89.61645825195312,
                    "end": 90.03445825195313
                  },
                  {
                    "word": "\n\nDoes ",
                    "start": 90.08008325195313,
                    "end": 90.23108325195312
                  },
                  {
                    "word": "that ",
                    "start": 90.23108325195312,
                    "end": 90.38208325195312
                  },
                  {
                    "word": "make ",
                    "start": 90.38208325195312,
                    "end": 90.58008325195313
                  },
                  {
                    "word": "sense?",
                    "start": 90.58008325195313,
                    "end": 91.24108325195313
                  }
                ],
                "metadata": {
                  "response_id": 11
                }
              },
              {
                "role": "user",
                "content": "Yeah. That makes sense.",
                "words": [
                  {
                    "word": "Yeah. ",
                    "start": 91.986,
                    "end": 92.386
                  },
                  {
                    "word": "That ",
                    "start": 92.386,
                    "end": 92.546005
                  },
                  {
                    "word": "makes ",
                    "start": 92.546005,
                    "end": 92.786
                  },
                  {
                    "word": "sense.",
                    "start": 92.786,
                    "end": 92.946
                  }
                ]
              },
              {
                "role": "agent",
                "content": "Perfect! The three most popular areas we treat are forehead lines, crow’s feet around the eyes, and the 11’s—that’s the frown lines between your eyebrows. We call them the 11’s because they look like the number eleven.\n\nWhich two areas would you say bother you most?",
                "words": [
                  {
                    "word": "Perfect!",
                    "start": 94.279,
                    "end": 95.034
                  },
                  {
                    "word": " The ",
                    "start": 95.152,
                    "end": 95.338
                  },
                  {
                    "word": "three ",
                    "start": 95.338,
                    "end": 95.593
                  },
                  {
                    "word": "most ",
                    "start": 95.593,
                    "end": 95.825
                  },
                  {
                    "word": "popular ",
                    "start": 95.825,
                    "end": 96.266
                  },
                  {
                    "word": "areas ",
                    "start": 96.266,
                    "end": 96.65
                  },
                  {
                    "word": "we ",
                    "start": 96.65,
                    "end": 96.789
                  },
                  {
                    "word": "treat ",
                    "start": 96.789,
                    "end": 97.126
                  },
                  {
                    "word": "are ",
                    "start": 97.126,
                    "end": 97.335
                  },
                  {
                    "word": "forehead ",
                    "start": 97.335,
                    "end": 97.764
                  },
                  {
                    "word": "lines, ",
                    "start": 97.764,
                    "end": 98.298
                  },
                  {
                    "word": "crow’s ",
                    "start": 98.298,
                    "end": 98.693
                  },
                  {
                    "word": "feet ",
                    "start": 98.693,
                    "end": 98.96
                  },
                  {
                    "word": "around ",
                    "start": 98.96,
                    "end": 99.262
                  },
                  {
                    "word": "the ",
                    "start": 99.262,
                    "end": 99.401
                  },
                  {
                    "word": "eyes, ",
                    "start": 99.401,
                    "end": 100.074
                  },
                  {
                    "word": "and ",
                    "start": 100.074,
                    "end": 100.341
                  },
                  {
                    "word": "the ",
                    "start": 100.341,
                    "end": 100.458
                  },
                  {
                    "word": "11’s—that’s ",
                    "start": 100.458,
                    "end": 100.957
                  },
                  {
                    "word": "the ",
                    "start": 100.957,
                    "end": 101.851
                  },
                  {
                    "word": "frown ",
                    "start": 101.851,
                    "end": 101.99
                  },
                  {
                    "word": "lines ",
                    "start": 101.99,
                    "end": 102.315
                  },
                  {
                    "word": "between ",
                    "start": 102.315,
                    "end": 102.629
                  },
                  {
                    "word": "your ",
                    "start": 102.629,
                    "end": 102.919
                  },
                  {
                    "word": "eyebrows.",
                    "start": 102.919,
                    "end": 103.07
                  },
                  {
                    "word": " We ",
                    "start": 103.84725,
                    "end": 103.97525
                  },
                  {
                    "word": "call ",
                    "start": 103.97525,
                    "end": 104.20725
                  },
                  {
                    "word": "them ",
                    "start": 104.20725,
                    "end": 104.37025
                  },
                  {
                    "word": "the ",
                    "start": 104.37025,
                    "end": 104.49825
                  },
                  {
                    "word": "11’s ",
                    "start": 104.49825,
                    "end": 105.07825
                  },
                  {
                    "word": "because ",
                    "start": 105.07825,
                    "end": 105.33425
                  },
                  {
                    "word": "they ",
                    "start": 105.33425,
                    "end": 105.48425
                  },
                  {
                    "word": "look ",
                    "start": 105.48425,
                    "end": 105.68225
                  },
                  {
                    "word": "like ",
                    "start": 105.68225,
                    "end": 105.85625
                  },
                  {
                    "word": "the ",
                    "start": 105.85625,
                    "end": 105.97225
                  },
                  {
                    "word": "number ",
                    "start": 105.97225,
                    "end": 106.30925
                  },
                  {
                    "word": "eleven.",
                    "start": 106.30925,
                    "end": 107.09825
                  },
                  {
                    "word": "\n\nWhich ",
                    "start": 107.1335,
                    "end": 107.4585
                  },
                  {
                    "word": "two ",
                    "start": 107.4585,
                    "end": 107.8535
                  },
                  {
                    "word": "areas ",
                    "start": 107.8535,
                    "end": 108.2945
                  },
                  {
                    "word": "would ",
                    "start": 108.2945,
                    "end": 108.4685
                  },
                  {
                    "word": "you ",
                    "start": 108.4685,
                    "end": 108.5845
                  },
                  {
                    "word": "say ",
                    "start": 108.5845,
                    "end": 108.7705
                  },
                  {
                    "word": "bother ",
                    "start": 108.7705,
                    "end": 109.0485
                  },
                  {
                    "word": "you ",
                    "start": 109.0485,
                    "end": 109.1885
                  },
                  {
                    "word": "most?",
                    "start": 109.1885,
                    "end": 109.6525
                  }
                ],
                "metadata": {
                  "response_id": 12
                }
              },
              {
                "role": "user",
                "content": "I would say forehead and glabellar.",
                "words": [
                  {
                    "word": "I ",
                    "start": 111.59599,
                    "end": 111.836
                  },
                  {
                    "word": "would ",
                    "start": 111.836,
                    "end": 111.91599
                  },
                  {
                    "word": "say ",
                    "start": 111.91599,
                    "end": 112.076
                  },
                  {
                    "word": "forehead ",
                    "start": 112.076,
                    "end": 112.635994
                  },
                  {
                    "word": "and ",
                    "start": 112.635994,
                    "end": 112.79599999999999
                  },
                  {
                    "word": "glabellar.",
                    "start": 112.79599999999999,
                    "end": 113.27599
                  }
                ]
              },
              {
                "role": "agent",
                "content": "Great choices—those are super common! The forehead lines and the glabellar area (the 11’s) really make a difference when they’re smoothed out.\n\nWhat does your schedule usually look like—are mornings or afternoons better for you?",
                "words": [
                  {
                    "word": "Great ",
                    "start": 115.13,
                    "end": 115.351
                  },
                  {
                    "word": "choices—those ",
                    "start": 115.351,
                    "end": 115.943
                  },
                  {
                    "word": "are ",
                    "start": 115.943,
                    "end": 116.059
                  },
                  {
                    "word": "super ",
                    "start": 116.059,
                    "end": 116.349
                  },
                  {
                    "word": "common!",
                    "start": 116.349,
                    "end": 116.976
                  },
                  {
                    "word": " The ",
                    "start": 116.98791674804687,
                    "end": 117.17291674804687
                  },
                  {
                    "word": "forehead ",
                    "start": 117.17291674804687,
                    "end": 117.55591674804687
                  },
                  {
                    "word": "lines ",
                    "start": 117.55591674804687,
                    "end": 117.98591674804688
                  },
                  {
                    "word": "and ",
                    "start": 117.98591674804688,
                    "end": 118.11391674804688
                  },
                  {
                    "word": "the ",
                    "start": 118.11391674804688,
                    "end": 118.20691674804688
                  },
                  {
                    "word": "glabellar ",
                    "start": 118.20691674804688,
                    "end": 118.76391674804688
                  },
                  {
                    "word": "area ",
                    "start": 118.76391674804688,
                    "end": 119.26291674804688
                  },
                  {
                    "word": "(the ",
                    "start": 119.26291674804688,
                    "end": 119.47191674804688
                  },
                  {
                    "word": "11’s) ",
                    "start": 119.47191674804688,
                    "end": 119.86691674804688
                  },
                  {
                    "word": "really ",
                    "start": 119.86691674804688,
                    "end": 120.84191674804687
                  },
                  {
                    "word": "make ",
                    "start": 120.84191674804687,
                    "end": 121.16691674804687
                  },
                  {
                    "word": "a ",
                    "start": 121.16691674804687,
                    "end": 121.34091674804688
                  },
                  {
                    "word": "difference ",
                    "start": 121.34091674804688,
                    "end": 121.41091674804687
                  },
                  {
                    "word": "when ",
                    "start": 121.41091674804687,
                    "end": 121.78291674804687
                  },
                  {
                    "word": "they’re ",
                    "start": 121.78291674804687,
                    "end": 121.89891674804687
                  },
                  {
                    "word": "smoothed ",
                    "start": 121.89891674804687,
                    "end": 122.09591674804688
                  },
                  {
                    "word": "out.",
                    "start": 122.09591674804688,
                    "end": 122.47891674804687
                  },
                  {
                    "word": "\n\nWhat ",
                    "start": 122.90879174804688,
                    "end": 123.11779174804687
                  },
                  {
                    "word": "does ",
                    "start": 123.11779174804687,
                    "end": 123.26879174804688
                  },
                  {
                    "word": "your ",
                    "start": 123.26879174804688,
                    "end": 123.43079174804687
                  },
                  {
                    "word": "schedule ",
                    "start": 123.43079174804687,
                    "end": 123.86079174804688
                  },
                  {
                    "word": "usually ",
                    "start": 123.86079174804688,
                    "end": 124.20879174804688
                  },
                  {
                    "word": "look ",
                    "start": 124.20879174804688,
                    "end": 124.44079174804688
                  },
                  {
                    "word": "like—are ",
                    "start": 124.44079174804688,
                    "end": 124.89379174804688
                  },
                  {
                    "word": "mornings ",
                    "start": 124.89379174804688,
                    "end": 125.31179174804687
                  },
                  {
                    "word": "or ",
                    "start": 125.31179174804687,
                    "end": 125.42779174804687
                  },
                  {
                    "word": "afternoons ",
                    "start": 125.42779174804687,
                    "end": 125.95079174804688
                  },
                  {
                    "word": "better ",
                    "start": 125.95079174804688,
                    "end": 126.26379174804687
                  },
                  {
                    "word": "for ",
                    "start": 126.26379174804687,
                    "end": 126.43779174804688
                  },
                  {
                    "word": "you?",
                    "start": 126.43779174804688,
                    "end": 126.91379174804688
                  }
                ],
                "metadata": {
                  "response_id": 14
                }
              },
              {
                "role": "user",
                "content": "Morning.",
                "words": [
                  {
                    "word": "Morning.",
                    "start": 127.896,
                    "end": 128.216
                  }
                ]
              },
              {
                "role": "agent",
                "content": "Got it, mornings work best for you. And is there a particular day that’s usually easier, or are you pretty flexible?",
                "words": [
                  {
                    "word": "Got ",
                    "start": 129.968,
                    "end": 130.212
                  },
                  {
                    "word": "it, ",
                    "start": 130.212,
                    "end": 130.304
                  },
                  {
                    "word": "mornings ",
                    "start": 130.304,
                    "end": 130.653
                  },
                  {
                    "word": "work ",
                    "start": 130.653,
                    "end": 130.838
                  },
                  {
                    "word": "best ",
                    "start": 130.838,
                    "end": 131.059
                  },
                  {
                    "word": "for ",
                    "start": 131.059,
                    "end": 131.21
                  },
                  {
                    "word": "you.",
                    "start": 131.21,
                    "end": 131.651
                  },
                  {
                    "word": " And ",
                    "start": 131.66316674804688,
                    "end": 131.87216674804688
                  },
                  {
                    "word": "is ",
                    "start": 131.87216674804688,
                    "end": 131.9991667480469
                  },
                  {
                    "word": "there ",
                    "start": 131.9991667480469,
                    "end": 132.2311667480469
                  },
                  {
                    "word": "a ",
                    "start": 132.2311667480469,
                    "end": 132.32416674804688
                  },
                  {
                    "word": "particular ",
                    "start": 132.32416674804688,
                    "end": 132.89316674804687
                  },
                  {
                    "word": "day ",
                    "start": 132.89316674804687,
                    "end": 133.09116674804687
                  },
                  {
                    "word": "that’s ",
                    "start": 133.09116674804687,
                    "end": 133.33416674804687
                  },
                  {
                    "word": "usually ",
                    "start": 133.33416674804687,
                    "end": 133.72916674804688
                  },
                  {
                    "word": "easier, ",
                    "start": 133.72916674804688,
                    "end": 134.31016674804687
                  },
                  {
                    "word": "or ",
                    "start": 134.31016674804687,
                    "end": 134.48416674804687
                  },
                  {
                    "word": "are ",
                    "start": 134.48416674804687,
                    "end": 134.6121667480469
                  },
                  {
                    "word": "you ",
                    "start": 134.6121667480469,
                    "end": 134.72816674804687
                  },
                  {
                    "word": "pretty ",
                    "start": 134.72816674804687,
                    "end": 135.00616674804687
                  },
                  {
                    "word": "flexible?",
                    "start": 135.00616674804687,
                    "end": 135.69116674804687
                  }
                ],
                "metadata": {
                  "response_id": 15
                }
              },
              {
                "role": "user",
                "content": "I'm pretty flexible.",
                "words": [
                  {
                    "word": "I'm ",
                    "start": 136.696,
                    "end": 137.096
                  },
                  {
                    "word": "pretty ",
                    "start": 137.096,
                    "end": 137.336
                  },
                  {
                    "word": "flexible.",
                    "start": 137.336,
                    "end": 137.65599
                  }
                ]
              }
            ],
            "transcript_with_tool_calls": [
              {
                "role": "agent",
                "content": "Hi, is this {{first_name}}?",
                "words": [
                  {
                    "word": "Hi, ",
                    "start": 2.135,
                    "end": 2.321
                  },
                  {
                    "word": "is ",
                    "start": 2.321,
                    "end": 2.425
                  },
                  {
                    "word": "this ",
                    "start": 2.425,
                    "end": 2.588
                  },
                  {
                    "word": "{{first_name}}?",
                    "start": 2.588,
                    "end": 2.948
                  }
                ],
                "metadata": {
                  "response_id": 0
                }
              },
              {
                "role": "user",
                "content": "Hello?",
                "words": [
                  {
                    "word": "Hello?",
                    "start": 5.776,
                    "end": 6.096
                  }
                ]
              },
              {
                "role": "agent",
                "content": "Hey {{first_name}}, it's Sophia from Life Esthetics.\n\nHow's everything going?",
                "words": [
                  {
                    "word": "Hey ",
                    "start": 7.6,
                    "end": 7.867
                  },
                  {
                    "word": "{{first_name}}, ",
                    "start": 7.867,
                    "end": 8.297
                  },
                  {
                    "word": "it's ",
                    "start": 8.297,
                    "end": 8.807
                  },
                  {
                    "word": "Sophia ",
                    "start": 8.807,
                    "end": 9.597
                  },
                  {
                    "word": "from ",
                    "start": 9.597,
                    "end": 9.736
                  },
                  {
                    "word": "Life ",
                    "start": 9.736,
                    "end": 10.108
                  },
                  {
                    "word": "Esthetics.\n",
                    "start": 10.108,
                    "end": 10.282
                  },
                  {
                    "word": "\n",
                    "start": 10.282,
                    "end": 10.479
                  },
                  {
                    "word": "How's ",
                    "start": 11.303083251953124,
                    "end": 11.512083251953126
                  },
                  {
                    "word": "everything ",
                    "start": 11.512083251953126,
                    "end": 11.872083251953125
                  },
                  {
                    "word": "going?",
                    "start": 11.872083251953125,
                    "end": 12.418083251953124
                  }
                ],
                "metadata": {
                  "response_id": 1
                }
              },
              {
                "role": "user",
                "content": "Good. How's it going?",
                "words": [
                  {
                    "word": "Good. ",
                    "start": 13.565999,
                    "end": 13.886
                  },
                  {
                    "word": "How's ",
                    "start": 13.886,
                    "end": 14.126
                  },
                  {
                    "word": "it ",
                    "start": 14.126,
                    "end": 14.206
                  },
                  {
                    "word": "going?",
                    "start": 14.206,
                    "end": 14.365998999999999
                  }
                ]
              },
              {
                "role": "agent",
                "content": "I'm doing well, thanks for asking!\n\nSo I see you registered with us a while back. What got you interested in Life Esthetics in the first place?",
                "words": [
                  {
                    "word": "I'm ",
                    "start": 15.76,
                    "end": 15.981
                  },
                  {
                    "word": "doing ",
                    "start": 15.981,
                    "end": 16.19
                  },
                  {
                    "word": "well, ",
                    "start": 16.19,
                    "end": 16.387
                  },
                  {
                    "word": "thanks ",
                    "start": 16.387,
                    "end": 16.631
                  },
                  {
                    "word": "for ",
                    "start": 16.631,
                    "end": 16.77
                  },
                  {
                    "word": "asking!",
                    "start": 16.77,
                    "end": 17.362
                  },
                  {
                    "word": "\n\nSo ",
                    "start": 17.408291748046874,
                    "end": 17.536291748046875
                  },
                  {
                    "word": "I ",
                    "start": 17.536291748046875,
                    "end": 17.606291748046875
                  },
                  {
                    "word": "see ",
                    "start": 17.606291748046875,
                    "end": 17.734291748046875
                  },
                  {
                    "word": "you ",
                    "start": 17.734291748046875,
                    "end": 17.861291748046874
                  },
                  {
                    "word": "registered ",
                    "start": 17.861291748046874,
                    "end": 18.268291748046874
                  },
                  {
                    "word": "with ",
                    "start": 18.268291748046874,
                    "end": 18.465291748046877
                  },
                  {
                    "word": "us ",
                    "start": 18.465291748046877,
                    "end": 18.639291748046876
                  },
                  {
                    "word": "a ",
                    "start": 18.639291748046876,
                    "end": 18.720291748046876
                  },
                  {
                    "word": "while ",
                    "start": 18.720291748046876,
                    "end": 18.999291748046875
                  },
                  {
                    "word": "back.",
                    "start": 18.999291748046875,
                    "end": 19.545291748046875
                  },
                  {
                    "word": " What ",
                    "start": 19.567958251953126,
                    "end": 19.857958251953125
                  },
                  {
                    "word": "got ",
                    "start": 19.857958251953125,
                    "end": 20.055958251953125
                  },
                  {
                    "word": "you ",
                    "start": 20.055958251953125,
                    "end": 20.194958251953125
                  },
                  {
                    "word": "interested ",
                    "start": 20.194958251953125,
                    "end": 20.751958251953123
                  },
                  {
                    "word": "in ",
                    "start": 20.751958251953123,
                    "end": 20.879958251953123
                  },
                  {
                    "word": "Life ",
                    "start": 20.879958251953123,
                    "end": 21.100958251953124
                  },
                  {
                    "word": "Esthetics ",
                    "start": 21.100958251953124,
                    "end": 21.587958251953125
                  },
                  {
                    "word": "in ",
                    "start": 21.587958251953125,
                    "end": 21.692958251953126
                  },
                  {
                    "word": "the ",
                    "start": 21.692958251953126,
                    "end": 21.796958251953125
                  },
                  {
                    "word": "first ",
                    "start": 21.796958251953125,
                    "end": 22.052958251953125
                  },
                  {
                    "word": "place?",
                    "start": 22.052958251953125,
                    "end": 22.655958251953123
                  }
                ],
                "metadata": {
                  "response_id": 2
                }
              },
              {
                "role": "user",
                "content": "I was interested in Botox.",
                "words": [
                  {
                    "word": "I ",
                    "start": 24.776001,
                    "end": 25.016001
                  },
                  {
                    "word": "was ",
                    "start": 25.016001,
                    "end": 25.336000000000002
                  },
                  {
                    "word": "interested ",
                    "start": 25.336000000000002,
                    "end": 25.816000000000003
                  },
                  {
                    "word": "in ",
                    "start": 25.816000000000003,
                    "end": 26.216
                  },
                  {
                    "word": "Botox.",
                    "start": 26.216,
                    "end": 26.696
                  }
                ]
              },
              {
                "role": "agent",
                "content": "Got it, that makes sense—Botox is super popular for a reason!Was there something specific you wanted to treat, or just curious about how it could help?",
                "words": [
                  {
                    "word": "Got ",
                    "start": 28.44,
                    "end": 28.649
                  },
                  {
                    "word": "it, ",
                    "start": 28.649,
                    "end": 28.765
                  },
                  {
                    "word": "that ",
                    "start": 28.765,
                    "end": 28.904
                  },
                  {
                    "word": "makes ",
                    "start": 28.904,
                    "end": 29.101
                  },
                  {
                    "word": "sense—Botox ",
                    "start": 29.101,
                    "end": 29.984
                  },
                  {
                    "word": "is ",
                    "start": 29.984,
                    "end": 30.088
                  },
                  {
                    "word": "super ",
                    "start": 30.088,
                    "end": 30.379
                  },
                  {
                    "word": "popular ",
                    "start": 30.379,
                    "end": 30.808
                  },
                  {
                    "word": "for ",
                    "start": 30.808,
                    "end": 30.971
                  },
                  {
                    "word": "a ",
                    "start": 30.971,
                    "end": 31.052
                  },
                  {
                    "word": "reason!",
                    "start": 31.052,
                    "end": 31.702
                  },
                  {
                    "word": "Was ",
                    "start": 31.748125,
                    "end": 32.004125
                  },
                  {
                    "word": "there ",
                    "start": 32.004125,
                    "end": 32.224125
                  },
                  {
                    "word": "something ",
                    "start": 32.224125,
                    "end": 32.619125
                  },
                  {
                    "word": "specific ",
                    "start": 32.619125,
                    "end": 33.118125
                  },
                  {
                    "word": "you ",
                    "start": 33.118125,
                    "end": 33.235125
                  },
                  {
                    "word": "wanted ",
                    "start": 33.235125,
                    "end": 33.478125
                  },
                  {
                    "word": "to ",
                    "start": 33.478125,
                    "end": 33.571125
                  },
                  {
                    "word": "treat, ",
                    "start": 33.571125,
                    "end": 33.850125
                  },
                  {
                    "word": "or ",
                    "start": 33.850125,
                    "end": 34.047125
                  },
                  {
                    "word": "just ",
                    "start": 34.047125,
                    "end": 34.291125
                  },
                  {
                    "word": "curious ",
                    "start": 34.291125,
                    "end": 34.872125
                  },
                  {
                    "word": "about ",
                    "start": 34.872125,
                    "end": 35.150125
                  },
                  {
                    "word": "how ",
                    "start": 35.150125,
                    "end": 35.348125
                  },
                  {
                    "word": "it ",
                    "start": 35.348125,
                    "end": 35.417125
                  },
                  {
                    "word": "could ",
                    "start": 35.417125,
                    "end": 35.580125
                  },
                  {
                    "word": "help?",
                    "start": 35.580125,
                    "end": 35.974125
                  }
                ],
                "metadata": {
                  "response_id": 4
                }
              },
              {
                "role": "user",
                "content": "Just curious to how it works.",
                "words": [
                  {
                    "word": "Just ",
                    "start": 37.045998,
                    "end": 37.285999999999994
                  },
                  {
                    "word": "curious ",
                    "start": 37.285999999999994,
                    "end": 37.685997
                  },
                  {
                    "word": "to ",
                    "start": 37.685997,
                    "end": 37.845997
                  },
                  {
                    "word": "how ",
                    "start": 37.845997,
                    "end": 37.925999999999995
                  },
                  {
                    "word": "it ",
                    "start": 37.925999999999995,
                    "end": 38.086
                  },
                  {
                    "word": "works.",
                    "start": 38.086,
                    "end": 38.166
                  }
                ]
              },
              {
                "role": "agent",
                "content": "Totally understandable—a lot of people are curious before they try it.Was there anything in particular that kept you from coming in, or were you just still thinking it over?",
                "words": [
                  {
                    "word": "Totally ",
                    "start": 39.699,
                    "end": 40.105
                  },
                  {
                    "word": "understandable—a ",
                    "start": 40.105,
                    "end": 40.837
                  },
                  {
                    "word": "lot ",
                    "start": 40.837,
                    "end": 40.988
                  },
                  {
                    "word": "of ",
                    "start": 40.988,
                    "end": 41.058
                  },
                  {
                    "word": "people ",
                    "start": 41.058,
                    "end": 41.301
                  },
                  {
                    "word": "are ",
                    "start": 41.301,
                    "end": 41.441
                  },
                  {
                    "word": "curious ",
                    "start": 41.441,
                    "end": 41.835
                  },
                  {
                    "word": "before ",
                    "start": 41.835,
                    "end": 42.114
                  },
                  {
                    "word": "they ",
                    "start": 42.114,
                    "end": 42.253
                  },
                  {
                    "word": "try ",
                    "start": 42.253,
                    "end": 42.532
                  },
                  {
                    "word": "it.",
                    "start": 42.532,
                    "end": 42.915
                  },
                  {
                    "word": "Was ",
                    "start": 42.938125,
                    "end": 43.194125
                  },
                  {
                    "word": "there ",
                    "start": 43.194125,
                    "end": 43.449125
                  },
                  {
                    "word": "anything ",
                    "start": 43.449125,
                    "end": 43.925125
                  },
                  {
                    "word": "in ",
                    "start": 43.925125,
                    "end": 44.064125
                  },
                  {
                    "word": "particular ",
                    "start": 44.064125,
                    "end": 44.610125
                  },
                  {
                    "word": "that ",
                    "start": 44.610125,
                    "end": 44.761125
                  },
                  {
                    "word": "kept ",
                    "start": 44.761125,
                    "end": 45.005125
                  },
                  {
                    "word": "you ",
                    "start": 45.005125,
                    "end": 45.121125
                  },
                  {
                    "word": "from ",
                    "start": 45.121125,
                    "end": 45.318125
                  },
                  {
                    "word": "coming ",
                    "start": 45.318125,
                    "end": 45.632125
                  },
                  {
                    "word": "in, ",
                    "start": 45.632125,
                    "end": 45.806125
                  },
                  {
                    "word": "or ",
                    "start": 45.806125,
                    "end": 45.945125
                  },
                  {
                    "word": "were ",
                    "start": 45.945125,
                    "end": 46.085125
                  },
                  {
                    "word": "you ",
                    "start": 46.085125,
                    "end": 46.212125
                  },
                  {
                    "word": "just ",
                    "start": 46.212125,
                    "end": 46.386125
                  },
                  {
                    "word": "still ",
                    "start": 46.386125,
                    "end": 46.653125
                  },
                  {
                    "word": "thinking ",
                    "start": 46.653125,
                    "end": 47.060125
                  },
                  {
                    "word": "it ",
                    "start": 47.060125,
                    "end": 47.176125
                  },
                  {
                    "word": "over?",
                    "start": 47.176125,
                    "end": 47.745125
                  }
                ],
                "metadata": {
                  "response_id": 6
                }
              },
              {
                "role": "user",
                "content": "Um, just didn't match with my schedule at the moment. I was pretty busy with work.",
                "words": [
                  {
                    "word": "Um, ",
                    "start": 49.086,
                    "end": 49.166
                  },
                  {
                    "word": "just ",
                    "start": 49.166,
                    "end": 49.406
                  },
                  {
                    "word": "didn't ",
                    "start": 49.406,
                    "end": 49.806
                  },
                  {
                    "word": "match ",
                    "start": 49.806,
                    "end": 50.046
                  },
                  {
                    "word": "with ",
                    "start": 50.046,
                    "end": 50.205999999999996
                  },
                  {
                    "word": "my ",
                    "start": 50.205999999999996,
                    "end": 50.366
                  },
                  {
                    "word": "schedule ",
                    "start": 50.366,
                    "end": 50.605999999999995
                  },
                  {
                    "word": "at ",
                    "start": 50.605999999999995,
                    "end": 50.846
                  },
                  {
                    "word": "the ",
                    "start": 50.846,
                    "end": 50.925999999999995
                  },
                  {
                    "word": "moment. ",
                    "start": 50.925999999999995,
                    "end": 51.166
                  },
                  {
                    "word": "I ",
                    "start": 51.166,
                    "end": 51.326
                  },
                  {
                    "word": "was ",
                    "start": 51.326,
                    "end": 51.486
                  },
                  {
                    "word": "pretty ",
                    "start": 51.486,
                    "end": 51.646
                  },
                  {
                    "word": "busy ",
                    "start": 51.646,
                    "end": 51.885999999999996
                  },
                  {
                    "word": "with ",
                    "start": 51.885999999999996,
                    "end": 52.046
                  },
                  {
                    "word": "work.",
                    "start": 52.046,
                    "end": 52.205999999999996
                  }
                ]
              },
              {
                "role": "agent",
                "content": "I hear you—life gets hectic, and it’s easy to put things like this on the back burner.\n\nActually, the timing might be perfect because we have something special going on right now.\n\nWe're offering registered first-timers like you a pretty significant deal on Botox.",
                "words": [
                  {
                    "word": "I ",
                    "start": 54.069,
                    "end": 54.313
                  },
                  {
                    "word": "hear ",
                    "start": 54.313,
                    "end": 54.58
                  },
                  {
                    "word": "you—life ",
                    "start": 54.58,
                    "end": 55.381
                  },
                  {
                    "word": "gets ",
                    "start": 55.381,
                    "end": 55.648
                  },
                  {
                    "word": "hectic, ",
                    "start": 55.648,
                    "end": 56.078
                  },
                  {
                    "word": "and ",
                    "start": 56.078,
                    "end": 56.217
                  },
                  {
                    "word": "it’s ",
                    "start": 56.217,
                    "end": 56.391
                  },
                  {
                    "word": "easy ",
                    "start": 56.391,
                    "end": 56.681
                  },
                  {
                    "word": "to ",
                    "start": 56.681,
                    "end": 56.797
                  },
                  {
                    "word": "put ",
                    "start": 56.797,
                    "end": 56.983
                  },
                  {
                    "word": "things ",
                    "start": 56.983,
                    "end": 57.25
                  },
                  {
                    "word": "like ",
                    "start": 57.25,
                    "end": 57.424
                  },
                  {
                    "word": "this ",
                    "start": 57.424,
                    "end": 57.645
                  },
                  {
                    "word": "on ",
                    "start": 57.645,
                    "end": 57.796
                  },
                  {
                    "word": "the ",
                    "start": 57.796,
                    "end": 57.912
                  },
                  {
                    "word": "back ",
                    "start": 57.912,
                    "end": 58.202
                  },
                  {
                    "word": "burner.",
                    "start": 58.202,
                    "end": 58.818
                  },
                  {
                    "word": "\n\nActually, ",
                    "start": 58.863625,
                    "end": 59.363625
                  },
                  {
                    "word": "the ",
                    "start": 59.363625,
                    "end": 59.514625
                  },
                  {
                    "word": "timing ",
                    "start": 59.514625,
                    "end": 59.885625
                  },
                  {
                    "word": "might ",
                    "start": 59.885625,
                    "end": 60.082625
                  },
                  {
                    "word": "be ",
                    "start": 60.082625,
                    "end": 60.222625
                  },
                  {
                    "word": "perfect ",
                    "start": 60.222625,
                    "end": 60.628625
                  },
                  {
                    "word": "because ",
                    "start": 60.628625,
                    "end": 60.907625
                  },
                  {
                    "word": "we ",
                    "start": 60.907625,
                    "end": 61.011625
                  },
                  {
                    "word": "have ",
                    "start": 61.011625,
                    "end": 61.151625
                  },
                  {
                    "word": "something ",
                    "start": 61.151625,
                    "end": 61.511625
                  },
                  {
                    "word": "special ",
                    "start": 61.511625,
                    "end": 61.928625
                  },
                  {
                    "word": "going ",
                    "start": 61.928625,
                    "end": 62.207625
                  },
                  {
                    "word": "on ",
                    "start": 62.207625,
                    "end": 62.346625
                  },
                  {
                    "word": "right ",
                    "start": 62.346625,
                    "end": 62.544625
                  },
                  {
                    "word": "now.",
                    "start": 62.544625,
                    "end": 63.043625
                  },
                  {
                    "word": "\n\nWe're ",
                    "start": 63.089666748046874,
                    "end": 63.25266674804688
                  },
                  {
                    "word": "offering ",
                    "start": 63.25266674804688,
                    "end": 63.57766674804687
                  },
                  {
                    "word": "registered ",
                    "start": 63.57766674804687,
                    "end": 64.19266674804688
                  },
                  {
                    "word": "first-timers ",
                    "start": 64.19266674804688,
                    "end": 64.81966674804687
                  },
                  {
                    "word": "like ",
                    "start": 64.81966674804687,
                    "end": 65.01766674804688
                  },
                  {
                    "word": "you ",
                    "start": 65.01766674804688,
                    "end": 65.21466674804688
                  },
                  {
                    "word": "a ",
                    "start": 65.21466674804688,
                    "end": 65.29566674804687
                  },
                  {
                    "word": "pretty ",
                    "start": 65.29566674804687,
                    "end": 65.57466674804688
                  },
                  {
                    "word": "significant ",
                    "start": 65.57466674804688,
                    "end": 66.12066674804687
                  },
                  {
                    "word": "deal ",
                    "start": 66.12066674804687,
                    "end": 66.36366674804688
                  },
                  {
                    "word": "on ",
                    "start": 66.36366674804688,
                    "end": 66.50366674804687
                  },
                  {
                    "word": "Botox.",
                    "start": 66.50366674804687,
                    "end": 67.22366674804688
                  }
                ],
                "metadata": {
                  "response_id": 9
                }
              },
              {
                "role": "user",
                "content": "Cool.",
                "words": [
                  {
                    "word": "Cool.",
                    "start": 70.476,
                    "end": 70.715996
                  }
                ]
              },
              {
                "role": "user",
                "content": "What is tell me more about it.",
                "words": [
                  {
                    "word": "What ",
                    "start": 71.926,
                    "end": 72.08601
                  },
                  {
                    "word": "is ",
                    "start": 72.08601,
                    "end": 72.246
                  },
                  {
                    "word": "tell ",
                    "start": 72.326004,
                    "end": 72.566
                  },
                  {
                    "word": "me ",
                    "start": 72.566,
                    "end": 72.64600399999999
                  },
                  {
                    "word": "more ",
                    "start": 72.64600399999999,
                    "end": 72.806
                  },
                  {
                    "word": "about ",
                    "start": 72.806,
                    "end": 72.966
                  },
                  {
                    "word": "it.",
                    "start": 72.966,
                    "end": 73.046005
                  }
                ]
              },
              {
                "role": "agent",
                "content": "Absolutely! Here’s how it works:\n\nYou pick two areas you want to treat. The first area? Completely free. The second area? You pay $250. That’s it—$250 total instead of the usual $500.\n\nSo you’re basically getting both areas for the price of one.\n\nDoes that make sense?",
                "words": [
                  {
                    "word": "Absolutely!",
                    "start": 74.314,
                    "end": 75.266
                  },
                  {
                    "word": " Here’s ",
                    "start": 75.312125,
                    "end": 75.568125
                  },
                  {
                    "word": "how ",
                    "start": 75.568125,
                    "end": 75.707125
                  },
                  {
                    "word": "it ",
                    "start": 75.707125,
                    "end": 75.800125
                  },
                  {
                    "word": "works:\n",
                    "start": 75.800125,
                    "end": 76.125125
                  },
                  {
                    "word": "\nYou ",
                    "start": 76.125125,
                    "end": 76.299125
                  },
                  {
                    "word": "pick ",
                    "start": 76.299125,
                    "end": 76.485125
                  },
                  {
                    "word": "two ",
                    "start": 76.485125,
                    "end": 76.682125
                  },
                  {
                    "word": "areas ",
                    "start": 76.682125,
                    "end": 77.042125
                  },
                  {
                    "word": "you ",
                    "start": 77.042125,
                    "end": 77.182125
                  },
                  {
                    "word": "want ",
                    "start": 77.182125,
                    "end": 77.333125
                  },
                  {
                    "word": "to ",
                    "start": 77.333125,
                    "end": 77.414125
                  },
                  {
                    "word": "treat.",
                    "start": 77.414125,
                    "end": 77.913125
                  },
                  {
                    "word": " The ",
                    "start": 77.92520825195312,
                    "end": 78.08720825195313
                  },
                  {
                    "word": "first ",
                    "start": 78.08720825195313,
                    "end": 78.36620825195313
                  },
                  {
                    "word": "area?",
                    "start": 78.36620825195313,
                    "end": 79.02820825195313
                  },
                  {
                    "word": " Completely ",
                    "start": 79.07379174804687,
                    "end": 79.48079174804687
                  },
                  {
                    "word": "free.",
                    "start": 79.48079174804687,
                    "end": 80.09579174804688
                  },
                  {
                    "word": " The ",
                    "start": 80.14191674804688,
                    "end": 80.29291674804688
                  },
                  {
                    "word": "second ",
                    "start": 80.29291674804688,
                    "end": 80.58391674804687
                  },
                  {
                    "word": "area?",
                    "start": 80.58391674804687,
                    "end": 81.07091674804687
                  },
                  {
                    "word": " You ",
                    "start": 81.10616674804687,
                    "end": 81.31516674804688
                  },
                  {
                    "word": "pay ",
                    "start": 81.31516674804688,
                    "end": 81.50116674804687
                  },
                  {
                    "word": "$250. ",
                    "start": 81.50116674804687,
                    "end": 81.64016674804688
                  },
                  {
                    "word": "That’s ",
                    "start": 83.02120825195313,
                    "end": 83.28820825195312
                  },
                  {
                    "word": "it—$250 ",
                    "start": 83.28820825195312,
                    "end": 83.43920825195312
                  },
                  {
                    "word": "total ",
                    "start": 83.43920825195312,
                    "end": 83.95020825195313
                  },
                  {
                    "word": "instead ",
                    "start": 83.95020825195313,
                    "end": 84.15920825195313
                  },
                  {
                    "word": "of ",
                    "start": 84.15920825195313,
                    "end": 84.26420825195312
                  },
                  {
                    "word": "the ",
                    "start": 84.26420825195312,
                    "end": 84.51920825195313
                  },
                  {
                    "word": "usual ",
                    "start": 84.51920825195313,
                    "end": 84.91420825195313
                  },
                  {
                    "word": "$500.",
                    "start": 84.91420825195313,
                    "end": 85.33220825195312
                  },
                  {
                    "word": "\n\nSo ",
                    "start": 87.44545825195313,
                    "end": 87.60745825195312
                  },
                  {
                    "word": "you’re ",
                    "start": 87.60745825195312,
                    "end": 87.77045825195313
                  },
                  {
                    "word": "basically ",
                    "start": 87.77045825195313,
                    "end": 88.09545825195312
                  },
                  {
                    "word": "getting ",
                    "start": 88.09545825195312,
                    "end": 88.36245825195313
                  },
                  {
                    "word": "both ",
                    "start": 88.36245825195313,
                    "end": 88.61745825195312
                  },
                  {
                    "word": "areas ",
                    "start": 88.61745825195312,
                    "end": 89.00045825195312
                  },
                  {
                    "word": "for ",
                    "start": 89.00045825195312,
                    "end": 89.12845825195312
                  },
                  {
                    "word": "the ",
                    "start": 89.12845825195312,
                    "end": 89.22145825195312
                  },
                  {
                    "word": "price ",
                    "start": 89.22145825195312,
                    "end": 89.47645825195312
                  },
                  {
                    "word": "of ",
                    "start": 89.47645825195312,
                    "end": 89.61645825195312
                  },
                  {
                    "word": "one.",
                    "start": 89.61645825195312,
                    "end": 90.03445825195313
                  },
                  {
                    "word": "\n\nDoes ",
                    "start": 90.08008325195313,
                    "end": 90.23108325195312
                  },
                  {
                    "word": "that ",
                    "start": 90.23108325195312,
                    "end": 90.38208325195312
                  },
                  {
                    "word": "make ",
                    "start": 90.38208325195312,
                    "end": 90.58008325195313
                  },
                  {
                    "word": "sense?",
                    "start": 90.58008325195313,
                    "end": 91.24108325195313
                  }
                ],
                "metadata": {
                  "response_id": 11
                }
              },
              {
                "role": "user",
                "content": "Yeah. That makes sense.",
                "words": [
                  {
                    "word": "Yeah. ",
                    "start": 91.986,
                    "end": 92.386
                  },
                  {
                    "word": "That ",
                    "start": 92.386,
                    "end": 92.546005
                  },
                  {
                    "word": "makes ",
                    "start": 92.546005,
                    "end": 92.786
                  },
                  {
                    "word": "sense.",
                    "start": 92.786,
                    "end": 92.946
                  }
                ]
              },
              {
                "role": "agent",
                "content": "Perfect! The three most popular areas we treat are forehead lines, crow’s feet around the eyes, and the 11’s—that’s the frown lines between your eyebrows. We call them the 11’s because they look like the number eleven.\n\nWhich two areas would you say bother you most?",
                "words": [
                  {
                    "word": "Perfect!",
                    "start": 94.279,
                    "end": 95.034
                  },
                  {
                    "word": " The ",
                    "start": 95.152,
                    "end": 95.338
                  },
                  {
                    "word": "three ",
                    "start": 95.338,
                    "end": 95.593
                  },
                  {
                    "word": "most ",
                    "start": 95.593,
                    "end": 95.825
                  },
                  {
                    "word": "popular ",
                    "start": 95.825,
                    "end": 96.266
                  },
                  {
                    "word": "areas ",
                    "start": 96.266,
                    "end": 96.65
                  },
                  {
                    "word": "we ",
                    "start": 96.65,
                    "end": 96.789
                  },
                  {
                    "word": "treat ",
                    "start": 96.789,
                    "end": 97.126
                  },
                  {
                    "word": "are ",
                    "start": 97.126,
                    "end": 97.335
                  },
                  {
                    "word": "forehead ",
                    "start": 97.335,
                    "end": 97.764
                  },
                  {
                    "word": "lines, ",
                    "start": 97.764,
                    "end": 98.298
                  },
                  {
                    "word": "crow’s ",
                    "start": 98.298,
                    "end": 98.693
                  },
                  {
                    "word": "feet ",
                    "start": 98.693,
                    "end": 98.96
                  },
                  {
                    "word": "around ",
                    "start": 98.96,
                    "end": 99.262
                  },
                  {
                    "word": "the ",
                    "start": 99.262,
                    "end": 99.401
                  },
                  {
                    "word": "eyes, ",
                    "start": 99.401,
                    "end": 100.074
                  },
                  {
                    "word": "and ",
                    "start": 100.074,
                    "end": 100.341
                  },
                  {
                    "word": "the ",
                    "start": 100.341,
                    "end": 100.458
                  },
                  {
                    "word": "11’s—that’s ",
                    "start": 100.458,
                    "end": 100.957
                  },
                  {
                    "word": "the ",
                    "start": 100.957,
                    "end": 101.851
                  },
                  {
                    "word": "frown ",
                    "start": 101.851,
                    "end": 101.99
                  },
                  {
                    "word": "lines ",
                    "start": 101.99,
                    "end": 102.315
                  },
                  {
                    "word": "between ",
                    "start": 102.315,
                    "end": 102.629
                  },
                  {
                    "word": "your ",
                    "start": 102.629,
                    "end": 102.919
                  },
                  {
                    "word": "eyebrows.",
                    "start": 102.919,
                    "end": 103.07
                  },
                  {
                    "word": " We ",
                    "start": 103.84725,
                    "end": 103.97525
                  },
                  {
                    "word": "call ",
                    "start": 103.97525,
                    "end": 104.20725
                  },
                  {
                    "word": "them ",
                    "start": 104.20725,
                    "end": 104.37025
                  },
                  {
                    "word": "the ",
                    "start": 104.37025,
                    "end": 104.49825
                  },
                  {
                    "word": "11’s ",
                    "start": 104.49825,
                    "end": 105.07825
                  },
                  {
                    "word": "because ",
                    "start": 105.07825,
                    "end": 105.33425
                  },
                  {
                    "word": "they ",
                    "start": 105.33425,
                    "end": 105.48425
                  },
                  {
                    "word": "look ",
                    "start": 105.48425,
                    "end": 105.68225
                  },
                  {
                    "word": "like ",
                    "start": 105.68225,
                    "end": 105.85625
                  },
                  {
                    "word": "the ",
                    "start": 105.85625,
                    "end": 105.97225
                  },
                  {
                    "word": "number ",
                    "start": 105.97225,
                    "end": 106.30925
                  },
                  {
                    "word": "eleven.",
                    "start": 106.30925,
                    "end": 107.09825
                  },
                  {
                    "word": "\n\nWhich ",
                    "start": 107.1335,
                    "end": 107.4585
                  },
                  {
                    "word": "two ",
                    "start": 107.4585,
                    "end": 107.8535
                  },
                  {
                    "word": "areas ",
                    "start": 107.8535,
                    "end": 108.2945
                  },
                  {
                    "word": "would ",
                    "start": 108.2945,
                    "end": 108.4685
                  },
                  {
                    "word": "you ",
                    "start": 108.4685,
                    "end": 108.5845
                  },
                  {
                    "word": "say ",
                    "start": 108.5845,
                    "end": 108.7705
                  },
                  {
                    "word": "bother ",
                    "start": 108.7705,
                    "end": 109.0485
                  },
                  {
                    "word": "you ",
                    "start": 109.0485,
                    "end": 109.1885
                  },
                  {
                    "word": "most?",
                    "start": 109.1885,
                    "end": 109.6525
                  }
                ],
                "metadata": {
                  "response_id": 12
                }
              },
              {
                "role": "user",
                "content": "I would say forehead and glabellar.",
                "words": [
                  {
                    "word": "I ",
                    "start": 111.59599,
                    "end": 111.836
                  },
                  {
                    "word": "would ",
                    "start": 111.836,
                    "end": 111.91599
                  },
                  {
                    "word": "say ",
                    "start": 111.91599,
                    "end": 112.076
                  },
                  {
                    "word": "forehead ",
                    "start": 112.076,
                    "end": 112.635994
                  },
                  {
                    "word": "and ",
                    "start": 112.635994,
                    "end": 112.79599999999999
                  },
                  {
                    "word": "glabellar.",
                    "start": 112.79599999999999,
                    "end": 113.27599
                  }
                ]
              },
              {
                "role": "agent",
                "content": "Great choices—those are super common! The forehead lines and the glabellar area (the 11’s) really make a difference when they’re smoothed out.\n\nWhat does your schedule usually look like—are mornings or afternoons better for you?",
                "words": [
                  {
                    "word": "Great ",
                    "start": 115.13,
                    "end": 115.351
                  },
                  {
                    "word": "choices—those ",
                    "start": 115.351,
                    "end": 115.943
                  },
                  {
                    "word": "are ",
                    "start": 115.943,
                    "end": 116.059
                  },
                  {
                    "word": "super ",
                    "start": 116.059,
                    "end": 116.349
                  },
                  {
                    "word": "common!",
                    "start": 116.349,
                    "end": 116.976
                  },
                  {
                    "word": " The ",
                    "start": 116.98791674804687,
                    "end": 117.17291674804687
                  },
                  {
                    "word": "forehead ",
                    "start": 117.17291674804687,
                    "end": 117.55591674804687
                  },
                  {
                    "word": "lines ",
                    "start": 117.55591674804687,
                    "end": 117.98591674804688
                  },
                  {
                    "word": "and ",
                    "start": 117.98591674804688,
                    "end": 118.11391674804688
                  },
                  {
                    "word": "the ",
                    "start": 118.11391674804688,
                    "end": 118.20691674804688
                  },
                  {
                    "word": "glabellar ",
                    "start": 118.20691674804688,
                    "end": 118.76391674804688
                  },
                  {
                    "word": "area ",
                    "start": 118.76391674804688,
                    "end": 119.26291674804688
                  },
                  {
                    "word": "(the ",
                    "start": 119.26291674804688,
                    "end": 119.47191674804688
                  },
                  {
                    "word": "11’s) ",
                    "start": 119.47191674804688,
                    "end": 119.86691674804688
                  },
                  {
                    "word": "really ",
                    "start": 119.86691674804688,
                    "end": 120.84191674804687
                  },
                  {
                    "word": "make ",
                    "start": 120.84191674804687,
                    "end": 121.16691674804687
                  },
                  {
                    "word": "a ",
                    "start": 121.16691674804687,
                    "end": 121.34091674804688
                  },
                  {
                    "word": "difference ",
                    "start": 121.34091674804688,
                    "end": 121.41091674804687
                  },
                  {
                    "word": "when ",
                    "start": 121.41091674804687,
                    "end": 121.78291674804687
                  },
                  {
                    "word": "they’re ",
                    "start": 121.78291674804687,
                    "end": 121.89891674804687
                  },
                  {
                    "word": "smoothed ",
                    "start": 121.89891674804687,
                    "end": 122.09591674804688
                  },
                  {
                    "word": "out.",
                    "start": 122.09591674804688,
                    "end": 122.47891674804687
                  },
                  {
                    "word": "\n\nWhat ",
                    "start": 122.90879174804688,
                    "end": 123.11779174804687
                  },
                  {
                    "word": "does ",
                    "start": 123.11779174804687,
                    "end": 123.26879174804688
                  },
                  {
                    "word": "your ",
                    "start": 123.26879174804688,
                    "end": 123.43079174804687
                  },
                  {
                    "word": "schedule ",
                    "start": 123.43079174804687,
                    "end": 123.86079174804688
                  },
                  {
                    "word": "usually ",
                    "start": 123.86079174804688,
                    "end": 124.20879174804688
                  },
                  {
                    "word": "look ",
                    "start": 124.20879174804688,
                    "end": 124.44079174804688
                  },
                  {
                    "word": "like—are ",
                    "start": 124.44079174804688,
                    "end": 124.89379174804688
                  },
                  {
                    "word": "mornings ",
                    "start": 124.89379174804688,
                    "end": 125.31179174804687
                  },
                  {
                    "word": "or ",
                    "start": 125.31179174804687,
                    "end": 125.42779174804687
                  },
                  {
                    "word": "afternoons ",
                    "start": 125.42779174804687,
                    "end": 125.95079174804688
                  },
                  {
                    "word": "better ",
                    "start": 125.95079174804688,
                    "end": 126.26379174804687
                  },
                  {
                    "word": "for ",
                    "start": 126.26379174804687,
                    "end": 126.43779174804688
                  },
                  {
                    "word": "you?",
                    "start": 126.43779174804688,
                    "end": 126.91379174804688
                  }
                ],
                "metadata": {
                  "response_id": 14
                }
              },
              {
                "role": "user",
                "content": "Morning.",
                "words": [
                  {
                    "word": "Morning.",
                    "start": 127.896,
                    "end": 128.216
                  }
                ]
              },
              {
                "role": "agent",
                "content": "Got it, mornings work best for you. And is there a particular day that’s usually easier, or are you pretty flexible?",
                "words": [
                  {
                    "word": "Got ",
                    "start": 129.968,
                    "end": 130.212
                  },
                  {
                    "word": "it, ",
                    "start": 130.212,
                    "end": 130.304
                  },
                  {
                    "word": "mornings ",
                    "start": 130.304,
                    "end": 130.653
                  },
                  {
                    "word": "work ",
                    "start": 130.653,
                    "end": 130.838
                  },
                  {
                    "word": "best ",
                    "start": 130.838,
                    "end": 131.059
                  },
                  {
                    "word": "for ",
                    "start": 131.059,
                    "end": 131.21
                  },
                  {
                    "word": "you.",
                    "start": 131.21,
                    "end": 131.651
                  },
                  {
                    "word": " And ",
                    "start": 131.66316674804688,
                    "end": 131.87216674804688
                  },
                  {
                    "word": "is ",
                    "start": 131.87216674804688,
                    "end": 131.9991667480469
                  },
                  {
                    "word": "there ",
                    "start": 131.9991667480469,
                    "end": 132.2311667480469
                  },
                  {
                    "word": "a ",
                    "start": 132.2311667480469,
                    "end": 132.32416674804688
                  },
                  {
                    "word": "particular ",
                    "start": 132.32416674804688,
                    "end": 132.89316674804687
                  },
                  {
                    "word": "day ",
                    "start": 132.89316674804687,
                    "end": 133.09116674804687
                  },
                  {
                    "word": "that’s ",
                    "start": 133.09116674804687,
                    "end": 133.33416674804687
                  },
                  {
                    "word": "usually ",
                    "start": 133.33416674804687,
                    "end": 133.72916674804688
                  },
                  {
                    "word": "easier, ",
                    "start": 133.72916674804688,
                    "end": 134.31016674804687
                  },
                  {
                    "word": "or ",
                    "start": 134.31016674804687,
                    "end": 134.48416674804687
                  },
                  {
                    "word": "are ",
                    "start": 134.48416674804687,
                    "end": 134.6121667480469
                  },
                  {
                    "word": "you ",
                    "start": 134.6121667480469,
                    "end": 134.72816674804687
                  },
                  {
                    "word": "pretty ",
                    "start": 134.72816674804687,
                    "end": 135.00616674804687
                  },
                  {
                    "word": "flexible?",
                    "start": 135.00616674804687,
                    "end": 135.69116674804687
                  }
                ],
                "metadata": {
                  "response_id": 15
                }
              },
              {
                "role": "user",
                "content": "I'm pretty flexible.",
                "words": [
                  {
                    "word": "I'm ",
                    "start": 136.696,
                    "end": 137.096
                  },
                  {
                    "word": "pretty ",
                    "start": 137.096,
                    "end": 137.336
                  },
                  {
                    "word": "flexible.",
                    "start": 137.336,
                    "end": 137.65599
                  }
                ]
              },
              {
                "role": "tool_call_invocation",
                "tool_call_id": "7b0b6ccb6f809890",
                "name": "check_availability",
                "arguments": "{\"end_date\":\"2025-10-15T23:59:59.000\",\"start_date\":\"2025-10-02T08:00:00.000\",\"service_type\":\"botox\",\"calendar_id\":\"QWR96dUWabZblOTmxUzm\",\"duration_minutes\":30,\"end_time\":\"2025-10-15T12:00:00.000\"}",
                "timeSec": 140.784
              }
            ],
            "latency": {},
            "call_cost": {
              "product_costs": [],
              "total_duration_seconds": 0,
              "total_duration_unit_price": 0,
              "combined_cost": 0
            },
            "opt_out_sensitive_data_storage": false,
            "data_storage_setting": "everything",
            "opt_in_signed_url": false,
            "from_number": "+18555788510",
            "to_number": "+13053008788",
            "direction": "outbound",
            "telephony_identifier": {
              "twilio_call_sid": "CA4019c926762afcfcbd37ee0b75eda346"
            }
          },
          "name": "check_availability",
          "args": {
            "end_date": "2025-10-15T23:59:59.000",
            "start_date": "2025-10-02T08:00:00.000",
            "service_type": "botox",
            "calendar_id": "QWR96dUWabZblOTmxUzm",
            "duration_minutes": 30,
            "end_time": "2025-10-15T12:00:00.000"
          }
        },
        "webhookUrl": "https://n8n.callreceptionist.com/webhook/8b6104d6-7b4a-470b-a045-a7bb82b3835b",
        "executionMode": "production"
      }
    ]
  },
  "meta": {
    "instanceId": "3b0aa76327a6c23cd6c1e2c80c411378d69d25af2fda4a61a2545c560fbe1e6c"
  }
}
